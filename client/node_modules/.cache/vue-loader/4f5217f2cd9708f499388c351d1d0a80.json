{"remainingRequest":"/Users/haris/Development/counting/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/haris/Development/counting/client/src/pages/face_recognition/FaceStream.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/haris/Development/counting/client/src/pages/face_recognition/FaceStream.vue","mtime":1577949492177},{"path":"/Users/haris/Development/counting/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/haris/Development/counting/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/haris/Development/counting/client/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/haris/Development/counting/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/haris/Development/counting/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBWdWVMb2FkSW1hZ2UgZnJvbSAndnVlLWxvYWQtaW1hZ2UnCiAgZXhwb3J0IGRlZmF1bHQgewogICAgY29tcG9uZW50czogewogICAgICAndnVlLWxvYWQtaW1hZ2UnOiBWdWVMb2FkSW1hZ2UKICAgIH0sCiAgICBwcm9wczogewogICAgICBzb3VyY2U6IFN0cmluZywKICAgIH0sCiAgICBkYXRhOiAoKSA9PiAoewogICAgICBjYW1lcmFzOltdLAogICAgICBwYWdlOiAxLAogICAgICBsZW5ndGggOiBudWxsLAogICAgfSksCgogICAgY3JlYXRlZCAoKSB7CiAgICAgIHRoaXMuJFByb2dyZXNzLnN0YXJ0KCkKICAgICAgdGhpcy5pbml0aWFsaXplKCkKICAgICAgdGhpcy4kUHJvZ3Jlc3MuZmluaXNoKCkKICAgIH0sCgogICAgd2F0Y2ggOnsKICAgICAgcGFnZSgpewogICAgICAgIHRoaXMuJFByb2dyZXNzLnN0YXJ0KCkKICAgICAgICB0aGlzLmluaXRpYWxpemUoKQogICAgICAgIHRoaXMuJFByb2dyZXNzLmZpbmlzaCgpCiAgICAgIH0KICAgIH0sCgogICAgbWV0aG9kczogewogICAgICBhc3luYyBpbml0aWFsaXplICgpIHsKICAgICAgICBsZXQgX3NlbGYgPSB0aGlzCiAgICAgICAgY29uc3QgeyBkYXRhIH0gPSBhd2FpdCB0aGlzLmF4aW9zLmdldChwcm9jZXNzLmVudi5WVUVfQVBQX0lQX1NFUlZFUiArICcvY2FtZXJhP3N5c3RlbT1mYWNlX3JlY29nbml0aW9uJnBhZ2U9JyArIHRoaXMucGFnZSkKICAgICAgICB0aGlzLmNhbWVyYXMgPSBkYXRhLmRhdGEKICAgICAgICB0aGlzLmxlbmd0aCA9IGRhdGEubGFzdF9wYWdlCgogICAgICAgIGRhdGEuZm9yRWFjaCgoZWxlbWVudCwgaSkgPT4gewogICAgICAgICAgdGhpcy5heGlvcy5nZXQocHJvY2Vzcy5lbnYuVlVFX0FQUF9JUF9TRVJWRVIgKyAnOicgKyBlbGVtZW50LnBvcnQpLnRoZW4oZnVuY3Rpb24oKXsKICAgICAgICAgICAgX3NlbGYuY2FtZXJhc1tpXS5zdGF0dXMgPSAxCiAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbihlcnJvcil7CiAgICAgICAgICAgICAgaWYgKCFlcnJvci5yZXNwb25zZSkgewogICAgICAgICAgICAgICAgLy8gbmV0d29yayBlcnJvcgogICAgICAgICAgICAgICAgX3NlbGYuY2FtZXJhc1tpXS5zdGF0dXMgPSAwCiAgICAgICAgICAgICAgICBfc2VsZi5jYW1lcmFzW2ldLnN0cmVhbVN0YXR1cyA9IGZhbHNlCiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIC8vIGh0dHAgc3RhdHVzIGNvZGUKICAgICAgICAgICAgICAgIGNvbnN0IGNvZGUgPSBlcnJvci5yZXNwb25zZS5zdGF0dXMKICAgICAgICAgICAgICAgIHdpbmRvdy5jb25zb2xlLmxvZyhjb2RlKQogICAgICAgICAgICAgICAgLy8gcmVzcG9uc2UgZGF0YQogICAgICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBlcnJvci5yZXNwb25zZS5kYXRhCiAgICAgICAgICAgICAgICB3aW5kb3cuY29uc29sZS5sb2cocmVzcG9uc2UpCiAgICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICAgIH0sCgogICAgICB2aWRlb1N0cmVhbShwb3J0KXsKICAgICAgICAgIGxldCByYW5kb20gPSBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHJpbmcoMiwgMTUpICsgTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyaW5nKDIsIDE1KQogICAgICAgICAgcmV0dXJuIHByb2Nlc3MuZW52LlZVRV9BUFBfSVBfU0VSVkVSX1dJVEhPVVRfUE9SVCsiOiIgKyBwb3J0ICsgIi8iICsgcmFuZG9tICsgIi9zdHJlYW0ubWpwZyIKICAgICAgfSwKICAgIH0sCiAgfQo="},{"version":3,"sources":["FaceStream.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"FaceStream.vue","sourceRoot":"src/pages/face_recognition","sourcesContent":["<template>\n    <v-container fluid grid-list-md>\n      <v-layout wrap>\n        <v-flex class=\"pb-4\" d-flex xs12 sm4 md3 v-for=\"item of cameras\" :key=\"item.id_cctv\">\n          <v-card width=\"300\">\n            <vue-load-image>\n              <img slot=\"image\" :src=\"item.ip_local +':'+ item.port+ '/' + Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15) +'/stream.mjpg'\" style=\"width: 100%\"/>\n              <v-img slot=\"preloader\" src=\"@/assets/preloader.gif\"/>\n              <v-img slot=\"error\" src=\"@/assets/offline.jpg\" aspect-ratio=\"1.7\"/>\n            </vue-load-image>\n              <v-card-actions>\n                <v-spacer></v-spacer>\n                    <v-btn :to=\"'/face_recognition/'+item.id+'/stream'\">\n                      {{ item.name + ' ' }}\n                      <div v-if=\"item.status == 1\">\n                        <v-icon class=\"pl-2\" color=\"green\" left >mdi-brightness-1</v-icon>\n                      </div>\n                      <div v-else>\n                        <v-icon class=\"pl-2\" color=\"red\" left >mdi-brightness-1</v-icon>\n                      </div>\n                    </v-btn>\n                <v-spacer></v-spacer>\n              </v-card-actions>\n          </v-card>\n        </v-flex>\n      </v-layout>\n        <div class=\"text-center\">\n          <v-pagination\n            v-model=\"page\"\n            :length=\"length\"\n            circle\n          ></v-pagination>\n        </div>\n    </v-container>\n\n</template>\n\n<script>\nimport VueLoadImage from 'vue-load-image'\n  export default {\n    components: {\n      'vue-load-image': VueLoadImage\n    },\n    props: {\n      source: String,\n    },\n    data: () => ({\n      cameras:[],\n      page: 1,\n      length : null,\n    }),\n\n    created () {\n      this.$Progress.start()\n      this.initialize()\n      this.$Progress.finish()\n    },\n\n    watch :{\n      page(){\n        this.$Progress.start()\n        this.initialize()\n        this.$Progress.finish()\n      }\n    },\n\n    methods: {\n      async initialize () {\n        let _self = this\n        const { data } = await this.axios.get(process.env.VUE_APP_IP_SERVER + '/camera?system=face_recognition&page=' + this.page)\n        this.cameras = data.data\n        this.length = data.last_page\n\n        data.forEach((element, i) => {\n          this.axios.get(process.env.VUE_APP_IP_SERVER + ':' + element.port).then(function(){\n            _self.cameras[i].status = 1\n          }).catch(function(error){\n              if (!error.response) {\n                // network error\n                _self.cameras[i].status = 0\n                _self.cameras[i].streamStatus = false\n              } else {\n                // http status code\n                const code = error.response.status\n                window.console.log(code)\n                // response data\n                const response = error.response.data\n                window.console.log(response)\n              }\n          });\n        });\n      },\n\n      videoStream(port){\n          let random = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\n          return process.env.VUE_APP_IP_SERVER_WITHOUT_PORT+\":\" + port + \"/\" + random + \"/stream.mjpg\"\n      },\n    },\n  }\n</script>\n"]}]}