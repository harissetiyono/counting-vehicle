{"remainingRequest":"/Users/haris/Development/counting/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/haris/Development/counting/client/src/pages/AddCamera.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/haris/Development/counting/client/src/pages/AddCamera.vue","mtime":1576652358264},{"path":"/Users/haris/Development/counting/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/haris/Development/counting/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/haris/Development/counting/client/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/haris/Development/counting/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/haris/Development/counting/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["AddCamera.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4MA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA","file":"AddCamera.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <v-stepper v-model=\"e1\">\n    <v-stepper-header>\n      <v-stepper-step :complete=\"e1 > 1\" step=\"1\">Camera Data</v-stepper-step>\n      <v-divider></v-divider>\n      <v-stepper-step :complete=\"e1 > 2\" step=\"2\">Counting Lines</v-stepper-step>\n    </v-stepper-header>\n\n    <v-stepper-items>\n      <v-stepper-content step=\"1\">\n        <div v-if=\"error_show\">\n            <v-alert dense type=\"error\" outlined v-if=\"$v.camera_data.$anyError\">\n                <div v-if=\"!$v.camera_data.name.required\">Camera name is required</div>\n                <div v-if=\"!$v.camera_data.name.minLength\">Camera name minumum 4 character</div>\n                <div v-if=\"!$v.camera_data.location.required\">Location is required</div>\n                <div v-if=\"!$v.camera_data.ip_stream.required\">Ip Stream is required</div>\n                <div v-if=\"!$v.camera_data.ip_local.required\">Ip Local is required</div>\n                <div v-if=\"!$v.camera_data.ip_local.url_or_ip\">Ip Local is invalid</div>\n                <div v-if=\"!$v.camera_data.longitude.decimal\">coordinate not longitude valid</div>\n                <div v-if=\"!$v.camera_data.latitude.decimal\">coordinate latitude not valid</div>\n                <div v-if=\"!$v.camera_data.port.required\">Port is required</div>\n                <div v-if=\"!$v.camera_data.port.between\">Port is not valid (min : 1025 and max: 65535)</div>\n            </v-alert>\n            <v-alert dense type=\"error\" outlined v-if=\"!statusConnection\">\n                Cannot connect stream server!\n            </v-alert>\n        </div>\n\n        <v-card>\n            <v-row class=\"pa-2 mt-n4 mb-n4\">\n                <v-col cols=\"6\">\n                    <p class=\"font-weight-regular mb-1\">Camera Name</p>\n                    <v-text-field v-model=\"camera_data.name\" solo label=\"Camera Name\"></v-text-field>\n                </v-col>\n                <v-col cols=\"6\">\n                    <p class=\"font-weight-regular mb-1\">IP Stream</p>\n                    <v-text-field v-model=\"camera_data.ip_stream\" solo label=\"IP Address\"></v-text-field>\n                </v-col>\n                <v-col class=\"mt-n10\" cols=\"6\">\n                    <p class=\"font-weight-regular mb-1\">Location</p>\n                    <v-textarea\n                    v-model=\"camera_data.location\"\n                    label=\"Location\"\n                    solo\n                    rows=\"1\"\n                    auto-grow\n                    ></v-textarea>\n                </v-col>\n                <v-col class=\"mt-n10\" cols=\"3\">\n                    <p class=\"font-weight-regular mb-1\">Longitude</p>\n                    <v-text-field v-model=\"camera_data.longitude\" solo label=\"Longitude\"></v-text-field>\n                </v-col>\n                <v-col class=\"mt-n10\" cols=\"3\">\n                    <p class=\"font-weight-regular mb-1\">Latitude</p>\n                    <v-text-field v-model=\"camera_data.latitude\" solo label=\"Latitude\"></v-text-field>\n                </v-col>\n                <v-col class=\"mt-n10\" cols=\"6\">\n                    <p class=\"font-weight-regular mb-1\">Port</p>\n                    <v-text-field v-model=\"camera_data.port\" solo label=\"ex: 9001\"></v-text-field>\n                </v-col>\n                <v-col class=\"mt-n10\" cols=\"6\">\n                    <p class=\"font-weight-regular mb-1\">Ip Server</p>\n                    <v-text-field v-model=\"camera_data.ip_local\" solo label=\"ex: htttp://127.0.0.1\"></v-text-field>\n                </v-col>\n            </v-row>\n            <v-btn\n                class=\"ma-2\"\n                color=\"primary\"\n                @click=\"continue1\"\n            >\n            Continue\n            </v-btn>\n            <v-btn\n                class=\"ma-2\"\n                to=\"/camera\"\n            >\n            Cancel\n            </v-btn>\n        </v-card>\n      </v-stepper-content>\n\n      <v-stepper-content step=\"2\">\n        <div v-if=\"error_show\">\n            <v-alert dense type=\"error\" outlined>\n                Please make line for counting vehicle!\n            </v-alert>\n        </div>\n        <v-card\n          class=\"pa-2 mb-4\"\n          color=\"grey lighten-1\"\n        >\n            <v-row\n                align=\"center\"\n                justify=\"center\"\n            >\n                <v-col\n                    cols=\"12\"\n                >\n                    <v-card\n                        class=\"pa-2\"\n                        max-height=\"580\"\n                    >\n                        <v-stage ref=\"stage\" :config=\"stageSize\">\n                            <v-layer ref=\"layer\">\n                                    <v-image ref=\"image\" @click=\"testClick\" :config=\"{\n                                        image: image,\n                                        scale: {\n                                            x: 0.5,\n                                            y: 0.5\n                                        }\n                                        }\"\n                                    />\n\n                                <v-line \n                                v-for=\"item in list\"\n                                :key=\"item.id\"\n                                :config=\"{\n                                    x: 0,\n                                    y: 0,\n                                    points: item.point,\n                                    closed: true,\n                                    stroke: item.stroke,\n                                }\"\n                                />\n                                <v-text ref=\"text\" :config=\"{\n                                x: 10,\n                                y: 10,\n                                fontFamily: 'Calibri',\n                                fontSize: 24,\n                                text: text,\n                                fill: 'white'\n                                }\" />\n                            </v-layer>\n                        </v-stage>\n                    </v-card>\n                </v-col>\n                <v-col\n                    cols=\"12\"\n                    md=\"6\"\n                >\n                    <v-card\n                        class=\"pa-2\"\n                    >\n                         <v-row class=\"mb-n8\" v-for=\"(item, index) in list\" :key=\"item.id\">\n                            <v-divider></v-divider>\n                            <v-col class=\"mb-n4\" cols=\"12\" >\n                            <span>{{ \"Line \" + doMath(index) }}</span>\n                            <v-divider></v-divider>\n                            </v-col>\n                            <v-col cols=\"12\" sm=\"3\">\n                            <v-text-field\n                                ref='line'\n                                :value=\"item.point[0] == null ? '0,0' : item.point[0] * 2 + ',' + item.point[1] * 2\"\n                                label=\"start (x,y)\"\n                                readonly\n                            ></v-text-field>\n                            </v-col>\n\n                            <v-col cols=\"12\" sm=\"3\">\n                            <v-text-field\n                                :value=\"item.point[2] == null ? '0,0' : item.point[2] * 2 + ',' + item.point[3] * 2\"\n                                label=\"end (x,y)\"\n                                readonly\n                            ></v-text-field>\n                            </v-col>\n\n                            <v-col cols=\"12\" sm=\"3\">\n                            <v-select\n                                v-model=\"item.path\"\n                                ref=\"path\"\n                                class=\"mt-4\"\n                                :items=\"items\"\n                                label=\"Line Status\"\n                                dense\n                            ></v-select>\n                            </v-col>\n\n                            <v-col cols=\"12\" sm=\"2\">\n                                <v-btn v-if=\"index != 0\" class=\"mt-4\" color=\"error\" @click=\"delLine(index)\" fab x-small dark>\n                                    <v-icon>mdi-close-circle</v-icon>\n                                </v-btn>\n                            </v-col>\n                        </v-row>\n                        <v-btn class=\"mt-4\" color=\"warning\" @click=\"reset\">reset</v-btn>\n                    </v-card>\n                </v-col>\n            </v-row>\n        </v-card>\n\n        <v-btn\n          color=\"primary\"\n          @click=\"saveConfirmation\"\n        >\n          Save\n        </v-btn>\n\n        <v-btn text @click=\"e1 = 1\">Back</v-btn>\n      </v-stepper-content>\n\n    </v-stepper-items>\n  </v-stepper>\n</template>\n\n<script>\nimport { required, minLength,ipAddress, url, or, numeric, between, decimal } from 'vuelidate/lib/validators'\nconst width = window.innerWidth;\nconst height = window.innerHeight;\n\n  export default {\n    data () {\n      return {\n        e1: 1,\n        error_show: false,\n        camera_data : {\n            name: null,\n            location: null,\n            ip_stream: null,\n            ip_local: null,\n            longitude: null, \n            latitude: null,\n            port: null\n        },\n        stageSize: {\n            width: width,\n            height: height\n        },\n        list: [{\n            x: 0,\n            y: 0,\n            point: [],\n            closed: true,\n            stroke: '#00a1ff',\n            path: 'IN'\n        }],\n        text: '',\n        image: null,\n        scale: null,\n        color: ['#00a1ff', '#ff5757','#32B332', '#ffc60a'],\n        items: ['IN', 'OUT'],\n        statusConnection: true,\n        };\n    },\n\n    validations: {\n        camera_data:{\n            name: {\n                required,\n                minLength: minLength(4)\n            },\n            location: {\n                required,\n            },\n            ip_stream:{\n                required\n            },\n            longitude:{\n                decimal\n            },\n            latitude:{\n                decimal\n            },\n            port:{\n                required,\n                numeric,\n                between: between(1025, 65535)\n            },\n            ip_local:{\n                required,\n                url_or_ip : or(ipAddress, url)\n            }\n        },        \n    },\n\n    created() {\n        this.$Progress.start()\n        if (this.$route.params.id) {\n            this.initialize(this.$route.params.id)\n        }\n        this.$Progress.finish()\n    },\n\n    methods: {\n        async initialize(id_camera){\n          try {\n              const respone_camera = await this.axios.get('http://127.0.0.1:8001/camera/' + id_camera)\n              this.camera_data = respone_camera.data\n              const respone_lines = await this.axios.get('http://127.0.0.1:8001/lines/' + id_camera)\n              this.list = respone_lines.data\n            } catch (error) {\n                window.console.log(Object.keys(error), error.message);\n            }\n        },\n\n        testClick(evt){\n            const stage = evt.target.getStage();\n            const pos = stage.getPointerPosition();\n            const x = Math.round(pos.x);\n            const y = Math.round(pos.y);\n            const id = this.list.length - 1\n            if(this.list.length > 4){\n                alert(\"maksimum 4 line\")\n                this.$delete(this.list, 4)\n            }else{\n                if(this.list[id].point.length == 4){\n                let data = { x: 0, y: 0, point: [x,y], closed: true, stroke: this.color[id], path: 'IN'}\n                this.list.push(data)\n                }else{\n                this.list[id].point.push(x,y)\n                this.list[id].stroke = this.color[id]\n                }\n            }\n            this.text = \"x: \" + x * 2 + \" and \" + \"y: \" + y * 2\n        },\n\n        reset(){\n            this.list = [{\n                x: 0,\n                y: 0,\n                point: [],\n                closed: true,\n                stroke: 'black',\n                path: 'IN'\n            }]\n        },\n\n        delLine(index){\n            this.$delete(this.list, index)\n        },\n\n        saveConfirmation(){\n            let self = this\n            if (this.list[0].point.length == 0 || this.list[0].point.length == 2) {\n                this.error_show = true\n            }else{\n                this.error_show = false\n                this.$swal.fire({\n                title: 'Are you sure?',\n                text: \"You won't be able to revert this!\",\n                icon: 'warning',\n                showCancelButton: true,\n                confirmButtonColor: '#3085d6',\n                cancelButtonColor: '#d33',\n                confirmButtonText: 'Yes, Save it!'\n                }).then((result) => {\n                if (result.value) {\n                    self.save(self.$route.params.id)\n                    this.$swal.fire(\n                        'Saved!',\n                        'Your Camera success save.',\n                        'success'\n                        )\n                    }\n                })\n            }\n        },\n\n        async save(id){\n            try {\n                if (id) {\n                    await this.axios.put('http://localhost:8001/camera', { camera_data : this.camera_data, line_path : this.list })\n                }else{\n                    await this.axios.post('http://localhost:8001/camera', { camera_data : this.camera_data, line_path : this.list })\n                }\n                this.$router.push({ name: 'Camera' })\n            } catch (error) {\n                alert(error)\n            }\n        },\n\n        continue1(){\n            const self = this\n            this.$v.$touch()\n            this.$Progress.start()\n            this.axios.get(this.camera_data.ip_stream).then(function(){\n                if (self.$v.$invalid) {\n                    self.error_show = true\n                } else {\n                    self.error_show = false\n                    self.statusConnection = true\n                    self.axios.post('http://localhost:8001/generate', { url : self.camera_data.ip_stream, port : self.camera_data.port })\n                    setTimeout(() => {\n                        self.e1 = 2\n                        const image = new window.Image();\n                        const today = new Date();\n                        const time = today.getHours() + today.getMinutes() + today.getSeconds();\n                        image.src = 'http://localhost:8001/storage/'+ self.camera_data.port +'.jpg?t=' + time;\n                        image.onload = () => {\n                            self.image = image; \n                        };\n                        self.$Progress.finish()\n                    },5000);\n                }\n            }).catch(function(){\n                self.statusConnection = false\n                self.error_show = true\n                self.$Progress.finish()\n            })\n            \n        },\n\n        doMath: function (index) {\n            return index+1\n        },\n    }\n  }\n</script>"]}]}