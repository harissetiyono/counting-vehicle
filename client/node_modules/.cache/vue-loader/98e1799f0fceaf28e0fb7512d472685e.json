{"remainingRequest":"/Users/haris/Development/counting/frontend-counting/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/haris/Development/counting/frontend-counting/src/pages/Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/haris/Development/counting/frontend-counting/src/pages/Dashboard.vue","mtime":1575184222444},{"path":"/Users/haris/Development/counting/frontend-counting/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/haris/Development/counting/frontend-counting/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/haris/Development/counting/frontend-counting/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/haris/Development/counting/frontend-counting/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/haris/Development/counting/frontend-counting/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBWdWVBcGV4Q2hhcnRzIGZyb20gJ3Z1ZS1hcGV4Y2hhcnRzJwogIGV4cG9ydCBkZWZhdWx0IHsKICAgIGNvbXBvbmVudHM6IHsgYXBleGNoYXJ0OiBWdWVBcGV4Q2hhcnRzIH0sCiAgICBwcm9wczogewogICAgICBzb3VyY2U6IFN0cmluZywKICAgIH0sCiAgICBkYXRhOiAoKSA9PiAoewogICAgICAgIHNlcmllczogW10sCiAgICAgICAgY2hhcnRPcHRpb25zOiB7CiAgICAgICAgICBjaGFydDogewogICAgICAgICAgICBzaGFkb3c6IHsKICAgICAgICAgICAgICBlbmFibGVkOiB0cnVlLAogICAgICAgICAgICAgIGNvbG9yOiAnIzAwMCcsCiAgICAgICAgICAgICAgdG9wOiAxOCwKICAgICAgICAgICAgICBsZWZ0OiA3LAogICAgICAgICAgICAgIGJsdXI6IDEwLAogICAgICAgICAgICAgIG9wYWNpdHk6IDEKICAgICAgICAgICAgfSwKICAgICAgICAgICAgdG9vbGJhcjogewogICAgICAgICAgICAgIHNob3c6IHRydWUKICAgICAgICAgICAgfSwKICAgICAgICAgICAgYW5pbWF0aW9uczogewogICAgICAgICAgICAgICAgZW5hYmxlZDogdHJ1ZSwKICAgICAgICAgICAgICAgIGVhc2luZzogJ2Vhc2Vpbm91dCcsCiAgICAgICAgICAgICAgICBzcGVlZDogODAwLAogICAgICAgICAgICAgICAgYW5pbWF0ZUdyYWR1YWxseTogewogICAgICAgICAgICAgICAgICAgIGVuYWJsZWQ6IHRydWUsCiAgICAgICAgICAgICAgICAgICAgZGVsYXk6IDE1MAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIGR5bmFtaWNBbmltYXRpb246IHsKICAgICAgICAgICAgICAgICAgICBlbmFibGVkOiB0cnVlLAogICAgICAgICAgICAgICAgICAgIHNwZWVkOiAzNTAKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfSwKCiAgICAgICAgICBjb2xvcnM6IFsncmdiKDAsMTM0LDI1MSknLCAncmdiKDAsMjI3LDE1MCknLCAncmdiKDI1NCwxNzYsMjUpJywgJ3JnYigyNTUsNjksOTYpJ10sCiAgICAgICAgICBkYXRhTGFiZWxzOiB7CiAgICAgICAgICAgIGVuYWJsZWQ6IHRydWUsCiAgICAgICAgICB9LAogICAgICAgICAgc3Ryb2tlOiB7CiAgICAgICAgICAgIGN1cnZlOiAnc21vb3RoJwogICAgICAgICAgfSwKICAgICAgICAgIHRpdGxlOiB7CiAgICAgICAgICAgIHRleHQ6ICdMaXZlIHRyYWZmaWMgdG9kYXknLAogICAgICAgICAgICBhbGlnbjogJ2xlZnQnCiAgICAgICAgICB9LAogICAgICAgICAgZ3JpZDogewogICAgICAgICAgICBib3JkZXJDb2xvcjogJyNlN2U3ZTcnLAogICAgICAgICAgICByb3c6IHsKICAgICAgICAgICAgICBjb2xvcnM6IFsnI2YzZjNmMycsICd0cmFuc3BhcmVudCddLCAvLyB0YWtlcyBhbiBhcnJheSB3aGljaCB3aWxsIGJlIHJlcGVhdGVkIG9uIGNvbHVtbnMKICAgICAgICAgICAgICBvcGFjaXR5OiAwLjUKICAgICAgICAgICAgfSwKICAgICAgICAgIH0sCiAgICAgICAgICBtYXJrZXJzOiB7CiAgICAgICAgICAgIHNpemU6IDYKICAgICAgICAgIH0sCiAgICAgICAgICB4YXhpczogewogICAgICAgICAgICBjYXRlZ29yaWVzOiBbXSwKICAgICAgICAgICAgdGl0bGU6IHsKICAgICAgICAgICAgICB0ZXh0OiAnVGltZScKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHlheGlzOiB7CiAgICAgICAgICAgIHRpdGxlOiB7CiAgICAgICAgICAgICAgdGV4dDogJ0NvdW50JwogICAgICAgICAgICB9LAogICAgICAgICAgfSwKICAgICAgICAgIGxlZ2VuZDogewogICAgICAgICAgICBwb3NpdGlvbjogJ3RvcCcsCiAgICAgICAgICAgIGhvcml6b250YWxBbGlnbjogJ3JpZ2h0JywKICAgICAgICAgICAgZmxvYXRpbmc6IHRydWUsCiAgICAgICAgICAgIG9mZnNldFk6IC0yNSwKICAgICAgICAgICAgb2Zmc2V0WDogLTUKICAgICAgICAgIH0KICAgICAgICB9LAoKICAgICAgICBzZXJpZXNXZWVrbHk6IFtdLAogICAgICAgIGNoYXJ0T3B0aW9uc0JhcjogewogICAgICAgICAgY2hhcnQ6IHsKICAgICAgICAgICAgaGVpZ2h0OiA1MDAsCiAgICAgICAgICAgIHN0YWNrZWQ6IHRydWUsCiAgICAgICAgICAgIHRvb2xiYXI6IHsKICAgICAgICAgICAgICBzaG93OiB0cnVlCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHpvb206IHsKICAgICAgICAgICAgICBlbmFibGVkOiB0cnVlCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB0aXRsZTogewogICAgICAgICAgICB0ZXh0OiAnTGFzdCA3IGRheSB0cmFmZmljJywKICAgICAgICAgICAgYWxpZ246ICdsZWZ0JwogICAgICAgICAgfSwKICAgICAgICAgIHJlc3BvbnNpdmU6IFt7CiAgICAgICAgICAgIGJyZWFrcG9pbnQ6IDQ4MCwKICAgICAgICAgICAgb3B0aW9uczogewogICAgICAgICAgICAgIGxlZ2VuZDogewogICAgICAgICAgICAgICAgcG9zaXRpb246ICdib3R0b20nLAogICAgICAgICAgICAgICAgb2Zmc2V0WDogLTEwLAogICAgICAgICAgICAgICAgb2Zmc2V0WTogMAogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfV0sCiAgICAgICAgICBwbG90T3B0aW9uczogewogICAgICAgICAgICBiYXI6IHsKICAgICAgICAgICAgICBob3Jpem9udGFsOiBmYWxzZSwKICAgICAgICAgICAgfSwKICAgICAgICAgIH0sCgogICAgICAgICAgeGF4aXM6IHsKICAgICAgICAgICAgY2F0ZWdvcmllczogW10sCiAgICAgICAgICAgIGxhYmVsczogewogICAgICAgICAgICAgIHJvdGF0ZTogLTQ1CiAgICAgICAgICAgIH0sCiAgICAgICAgICB9LAogICAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICAgIHBvc2l0aW9uOiAncmlnaHQnLAogICAgICAgICAgICBvZmZzZXRZOiA0MAogICAgICAgICAgfSwKICAgICAgICAgIGZpbGw6IHsKICAgICAgICAgICAgb3BhY2l0eTogMQogICAgICAgICAgfQogICAgICAgIH0sCgogICAgICAgIHNlcmllc1BpZTogW10sCiAgICAgICAgY2hhcnRPcHRpb25zUGllOiB7CiAgICAgICAgICBsYWJlbHM6IFsnTW9iaWwnLCAnTW90b3InLCAnVHJ1Y2snLCAnQnVzJ10sCiAgICAgICAgICBjaGFydDogewogICAgICAgICAgICAgICAgd2lkdGg6IDMwMAogICAgICAgICAgfSwKICAgICAgICAgIGxlZ2VuZDogewogICAgICAgICAgICBwb3NpdGlvbjogJ2JvdHRvbScKICAgICAgICAgIH0sCiAgICAgICAgICByZXNwb25zaXZlOiBbewogICAgICAgICAgICBicmVha3BvaW50OiA0ODAsCiAgICAgICAgICAgIG9wdGlvbnM6IHsKICAgICAgICAgICAgICBjaGFydDogewogICAgICAgICAgICAgICAgd2lkdGg6IDMwMAogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICAgICAgICBwb3NpdGlvbjogJ2JvdHRvbScKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH1dCiAgICAgICAgfSwKCiAgICAgICAgc2VyaWVzSGVhdG1hcDogW10sCiAgICAgICAgY2hhcnRPcHRpb25zSGVhdG1hcDogewogICAgICAgICAgY2hhcnQ6IHsKICAgICAgICAgICAgICAgIGhlaWdodDogNTAwLAogICAgICAgICAgICAgICAgdHlwZTogJ2hlYXRtYXAnCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGRhdGFMYWJlbHM6IHsKICAgICAgICAgICAgICAgIGVuYWJsZWQ6IGZhbHNlLAogICAgICAgICAgICB9LAogICAgICAgICAgICBwbG90T3B0aW9uczogewogICAgICAgICAgICAgICAgaGVhdG1hcDogewogICAgICAgICAgICAgICAgICAgIGNvbG9yU2NhbGU6IHsKICAgICAgICAgICAgICAgICAgICAgICAgaW52ZXJzZTogdHJ1ZQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgdGhlbWU6IHsKICAgICAgICAgICAgICBwYWxsZXRlOiAncGFsZXR0ZTcnCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHhheGlzOiB7CiAgICAgICAgICAgICAgICB0eXBlOiAnY2F0ZWdvcnknLAogICAgICAgICAgICAgICAgY2F0ZWdvcmllczogWydXMScsICdXMicsICdXMycsICdXNCcsICdXNSddCiAgICAgICAgICAgIH0sCgogICAgICAgICAgICB0aXRsZTogewogICAgICAgICAgICAgICAgdGV4dDogJ0hlYXRtYXAgdHJhZmZpYyBwZXIgaG91cnMnCiAgICAgICAgICAgIH0sCiAgICAgICAgfQogICAgfSksCgogICAgY3JlYXRlZCAoKSB7CiAgICAgIHRoaXMudHJhZmZpYygpCiAgICAgIHRoaXMucGllKCkKICAgICAgdGhpcy50cmFmZmljX3dlZWtseSgpCiAgICAgIHRoaXMuaGVhdG1hcCgpCiAgICB9LAoKICAgIGNvbXB1dGVkOiB7CiAgICB9LAoKICAgIG1ldGhvZHM6IHsKICAgICAgYXN5bmMgdHJhZmZpYygpewogICAgICAgIHRyeSB7CiAgICAgICAgICBjb25zdCB7IGRhdGEgfSA9IGF3YWl0IHRoaXMuYXhpb3MuZ2V0KCdodHRwOi8vMTI3LjAuMC4xOjgwMDEvdHJlbmQ/c3RhcnRfZGF0ZT0yMDE5LTA5LTAxJmVuZF9kYXRlPTIwMTktMTAtMTEmbGFuZT1hbGwnKQogICAgICAgICAgdGhpcy5zZXJpZXMgPSBkYXRhLmRhdGFzZXRzCiAgICAgICAgICB0aGlzLmNoYXJ0T3B0aW9ucyA9IHsKICAgICAgICAgICAgeGF4aXMgOiB7CiAgICAgICAgICAgICAgY2F0ZWdvcmllcyA6IGRhdGEuY2F0ZWdvcmllcwogICAgICAgICAgICB9LAogICAgICAgICAgfQogICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICB3aW5kb3cuY29uc29sZS5sb2coZXJyb3IpCiAgICAgICAgfQogICAgICB9LAoKICAgICAgYXN5bmMgcGllKCl7CiAgICAgICAgdHJ5IHsKICAgICAgICAgIGNvbnN0IHsgZGF0YSB9ID0gYXdhaXQgdGhpcy5heGlvcy5nZXQoJ2h0dHA6Ly8xMjcuMC4wLjE6ODAwMS9waWU/c3RhcnRfZGF0ZT0yMDE5LTA5LTAxJmVuZF9kYXRlPTIwMTktMTAtMTEmbGFuZT1hbGwnKQogICAgICAgICAgdGhpcy5zZXJpZXNQaWUgPSBkYXRhLmRhdGFzZXRzCiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICAgIHdpbmRvdy5jb25zb2xlLmxvZyhlcnJvcikKICAgICAgICB9CiAgICAgIH0sCgogICAgICBhc3luYyBoZWF0bWFwKCl7CiAgICAgICAgdHJ5IHsKICAgICAgICAgIGNvbnN0IHsgZGF0YSB9ID0gYXdhaXQgdGhpcy5heGlvcy5nZXQoJ2h0dHA6Ly8xMjcuMC4wLjE6ODAwMS9oZWF0bWFwJykKICAgICAgICAgIHRoaXMuc2VyaWVzSGVhdG1hcCA9IGRhdGEKICAgICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgICAgd2luZG93LmNvbnNvbGUubG9nKGVycm9yKQogICAgICAgIH0KICAgICAgfSwKCiAgICAgIGFzeW5jIHRyYWZmaWNfd2Vla2x5KCl7CiAgICAgICAgdHJ5IHsKICAgICAgICAgIGNvbnN0IHsgZGF0YSB9ID0gYXdhaXQgdGhpcy5heGlvcy5nZXQoJ2h0dHA6Ly8xMjcuMC4wLjE6ODAwMS93ZWVrbHkvdHJlbmQnKQogICAgICAgICAgdGhpcy5zZXJpZXNXZWVrbHkgPSBkYXRhLmRhdGFzZXRzCiAgICAgICAgICB0aGlzLmNoYXJ0T3B0aW9uc0JhciA9IHsKICAgICAgICAgICAgeGF4aXMgOiB7CiAgICAgICAgICAgICAgY2F0ZWdvcmllcyA6IGRhdGEuY2F0ZWdvcmllcywKICAgICAgICAgICAgICBsYWJlbHM6IHsKICAgICAgICAgICAgICAgIHJvdGF0ZTogLTQ1CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICB3aW5kb3cuY29uc29sZS5sb2coZXJyb3IpCiAgICAgICAgfQogICAgICAgIAogICAgICB9CiAgICB9CgogIH0K"},{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA","file":"Dashboard.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n<v-row>\n      <v-col\n        cols=\"12\"\n        md=\"8\"\n      >\n        <v-card\n          class=\"pa-2\"\n          outlined\n          tile\n        >\n          <apexchart type=line height=\"350\" :options=\"chartOptions\" :series=\"series\" />\n        </v-card>\n      </v-col>\n      <v-col\n        cols=\"12\"\n        md=\"4\"\n      >\n        <v-card\n          class=\"pa-2\"\n          outlined\n          tile\n          height=\"385\"\n        >\n          <v-list-item-content>\n            <div class=\"overline mb-4\">Percentage Today</div>\n          </v-list-item-content>\n          <apexchart type=pie height=\"90%\" :options=\"chartOptionsPie\" :series=\"seriesPie\" />\n        </v-card>\n      </v-col>\n\n      <v-col\n        cols=\"12\"\n        md=\"6\"\n      >\n        <v-card\n          class=\"pa-2\"\n          outlined\n          tile\n        >\n          <apexchart type=bar :options=\"chartOptionsBar\" :series=\"seriesWeekly\" />\n        </v-card>\n      </v-col>\n      <v-col\n        cols=\"12\"\n        md=\"6\"\n      >\n        <v-card\n          class=\"pa-2\"\n          outlined\n          tile\n        >\n          <apexchart type=heatmap :options=\"chartOptionsHeatmap\" :series=\"seriesHeatmap\" />\n        </v-card>\n      </v-col>\n    </v-row>\n</template>\n\n<script>\nimport VueApexCharts from 'vue-apexcharts'\n  export default {\n    components: { apexchart: VueApexCharts },\n    props: {\n      source: String,\n    },\n    data: () => ({\n        series: [],\n        chartOptions: {\n          chart: {\n            shadow: {\n              enabled: true,\n              color: '#000',\n              top: 18,\n              left: 7,\n              blur: 10,\n              opacity: 1\n            },\n            toolbar: {\n              show: true\n            },\n            animations: {\n                enabled: true,\n                easing: 'easeinout',\n                speed: 800,\n                animateGradually: {\n                    enabled: true,\n                    delay: 150\n                },\n                dynamicAnimation: {\n                    enabled: true,\n                    speed: 350\n                }\n            }\n          },\n\n          colors: ['rgb(0,134,251)', 'rgb(0,227,150)', 'rgb(254,176,25)', 'rgb(255,69,96)'],\n          dataLabels: {\n            enabled: true,\n          },\n          stroke: {\n            curve: 'smooth'\n          },\n          title: {\n            text: 'Live traffic today',\n            align: 'left'\n          },\n          grid: {\n            borderColor: '#e7e7e7',\n            row: {\n              colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\n              opacity: 0.5\n            },\n          },\n          markers: {\n            size: 6\n          },\n          xaxis: {\n            categories: [],\n            title: {\n              text: 'Time'\n            }\n          },\n          yaxis: {\n            title: {\n              text: 'Count'\n            },\n          },\n          legend: {\n            position: 'top',\n            horizontalAlign: 'right',\n            floating: true,\n            offsetY: -25,\n            offsetX: -5\n          }\n        },\n\n        seriesWeekly: [],\n        chartOptionsBar: {\n          chart: {\n            height: 500,\n            stacked: true,\n            toolbar: {\n              show: true\n            },\n            zoom: {\n              enabled: true\n            }\n          },\n          title: {\n            text: 'Last 7 day traffic',\n            align: 'left'\n          },\n          responsive: [{\n            breakpoint: 480,\n            options: {\n              legend: {\n                position: 'bottom',\n                offsetX: -10,\n                offsetY: 0\n              }\n            }\n          }],\n          plotOptions: {\n            bar: {\n              horizontal: false,\n            },\n          },\n\n          xaxis: {\n            categories: [],\n            labels: {\n              rotate: -45\n            },\n          },\n          legend: {\n            position: 'right',\n            offsetY: 40\n          },\n          fill: {\n            opacity: 1\n          }\n        },\n\n        seriesPie: [],\n        chartOptionsPie: {\n          labels: ['Mobil', 'Motor', 'Truck', 'Bus'],\n          chart: {\n                width: 300\n          },\n          legend: {\n            position: 'bottom'\n          },\n          responsive: [{\n            breakpoint: 480,\n            options: {\n              chart: {\n                width: 300\n              },\n              legend: {\n                position: 'bottom'\n              }\n            }\n          }]\n        },\n\n        seriesHeatmap: [],\n        chartOptionsHeatmap: {\n          chart: {\n                height: 500,\n                type: 'heatmap'\n            },\n            dataLabels: {\n                enabled: false,\n            },\n            plotOptions: {\n                heatmap: {\n                    colorScale: {\n                        inverse: true\n                    }\n                }\n            },\n            theme: {\n              pallete: 'palette7'\n            },\n            xaxis: {\n                type: 'category',\n                categories: ['W1', 'W2', 'W3', 'W4', 'W5']\n            },\n\n            title: {\n                text: 'Heatmap traffic per hours'\n            },\n        }\n    }),\n\n    created () {\n      this.traffic()\n      this.pie()\n      this.traffic_weekly()\n      this.heatmap()\n    },\n\n    computed: {\n    },\n\n    methods: {\n      async traffic(){\n        try {\n          const { data } = await this.axios.get('http://127.0.0.1:8001/trend?start_date=2019-09-01&end_date=2019-10-11&lane=all')\n          this.series = data.datasets\n          this.chartOptions = {\n            xaxis : {\n              categories : data.categories\n            },\n          }\n        } catch (error) {\n          window.console.log(error)\n        }\n      },\n\n      async pie(){\n        try {\n          const { data } = await this.axios.get('http://127.0.0.1:8001/pie?start_date=2019-09-01&end_date=2019-10-11&lane=all')\n          this.seriesPie = data.datasets\n        } catch (error) {\n          window.console.log(error)\n        }\n      },\n\n      async heatmap(){\n        try {\n          const { data } = await this.axios.get('http://127.0.0.1:8001/heatmap')\n          this.seriesHeatmap = data\n        } catch (error) {\n          window.console.log(error)\n        }\n      },\n\n      async traffic_weekly(){\n        try {\n          const { data } = await this.axios.get('http://127.0.0.1:8001/weekly/trend')\n          this.seriesWeekly = data.datasets\n          this.chartOptionsBar = {\n            xaxis : {\n              categories : data.categories,\n              labels: {\n                rotate: -45\n              },\n            }\n          }\n        } catch (error) {\n          window.console.log(error)\n        }\n        \n      }\n    }\n\n  }\n</script>\n"]}]}