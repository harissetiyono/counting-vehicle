{"remainingRequest":"/Users/haris/Development/counting/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/haris/Development/counting/client/src/pages/face_recognition/FaceCameraForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/haris/Development/counting/client/src/pages/face_recognition/FaceCameraForm.vue","mtime":1578890116920},{"path":"/Users/haris/Development/counting/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/haris/Development/counting/client/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/haris/Development/counting/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/haris/Development/counting/client/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/haris/Development/counting/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/haris/Development/counting/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IHJlcXVpcmVkLCBtaW5MZW5ndGgsIG51bWVyaWMsIGJldHdlZW4sIGRlY2ltYWwgfSBmcm9tICd2dWVsaWRhdGUvbGliL3ZhbGlkYXRvcnMnCgogIGV4cG9ydCBkZWZhdWx0IHsKICAgIGRhdGEgKCkgewogICAgICByZXR1cm4gewogICAgICAgIGUxOiAxLAogICAgICAgIGVycm9yX3Nob3c6IGZhbHNlLAogICAgICAgIGNhbWVyYV9kYXRhIDogewogICAgICAgICAgICBuYW1lOiBudWxsLAogICAgICAgICAgICBsb2NhdGlvbjogbnVsbCwKICAgICAgICAgICAgaXBfc3RyZWFtOiBudWxsLAogICAgICAgICAgICBpcF9sb2NhbDogbnVsbCwKICAgICAgICAgICAgbG9uZ2l0dWRlOiBudWxsLCAKICAgICAgICAgICAgbGF0aXR1ZGU6IG51bGwsCiAgICAgICAgICAgIHBvcnQ6IG51bGwKICAgICAgICB9LAogICAgICAgIHN0YXR1c0Nvbm5lY3Rpb246IHRydWUsCiAgICAgICAgfTsKICAgIH0sCgogICAgdmFsaWRhdGlvbnM6IHsKICAgICAgICBjYW1lcmFfZGF0YTp7CiAgICAgICAgICAgIG5hbWU6IHsKICAgICAgICAgICAgICAgIHJlcXVpcmVkLAogICAgICAgICAgICAgICAgbWluTGVuZ3RoOiBtaW5MZW5ndGgoNCkKICAgICAgICAgICAgfSwKICAgICAgICAgICAgbG9jYXRpb246IHsKICAgICAgICAgICAgICAgIHJlcXVpcmVkLAogICAgICAgICAgICB9LAogICAgICAgICAgICBpcF9zdHJlYW06ewogICAgICAgICAgICAgICAgcmVxdWlyZWQKICAgICAgICAgICAgfSwKICAgICAgICAgICAgbG9uZ2l0dWRlOnsKICAgICAgICAgICAgICAgIGRlY2ltYWwKICAgICAgICAgICAgfSwKICAgICAgICAgICAgbGF0aXR1ZGU6ewogICAgICAgICAgICAgICAgZGVjaW1hbAogICAgICAgICAgICB9LAogICAgICAgICAgICBwb3J0OnsKICAgICAgICAgICAgICAgIHJlcXVpcmVkLAogICAgICAgICAgICAgICAgbnVtZXJpYywKICAgICAgICAgICAgICAgIGJldHdlZW46IGJldHdlZW4oMTAyNSwgNjU1MzUpCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGlwX2xvY2FsOnsKICAgICAgICAgICAgICAgIHJlcXVpcmVkLAogICAgICAgICAgICB9CiAgICAgICAgfSwgICAgICAgIAogICAgfSwKCiAgICBjcmVhdGVkKCkgewogICAgICAgIHRoaXMuJFByb2dyZXNzLnN0YXJ0KCkKICAgICAgICBpZiAodGhpcy4kcm91dGUucGFyYW1zLmlkKSB7CiAgICAgICAgICAgIHRoaXMuaW5pdGlhbGl6ZSh0aGlzLiRyb3V0ZS5wYXJhbXMuaWQpCiAgICAgICAgfQogICAgICAgIHRoaXMuJFByb2dyZXNzLmZpbmlzaCgpCiAgICB9LAoKICAgIG1ldGhvZHM6IHsKICAgICAgICBhc3luYyBpbml0aWFsaXplKGlkX2NhbWVyYSl7CiAgICAgICAgICB0cnkgewogICAgICAgICAgICAgIGNvbnN0IHJlc3BvbmVfY2FtZXJhID0gYXdhaXQgdGhpcy5heGlvcy5nZXQocHJvY2Vzcy5lbnYuVlVFX0FQUF9JUF9TRVJWRVIgKyAnL2NhbWVyYS8nICsgaWRfY2FtZXJhKQogICAgICAgICAgICAgIHRoaXMuY2FtZXJhX2RhdGEgPSByZXNwb25lX2NhbWVyYS5kYXRhCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICAgICAgICB3aW5kb3cuY29uc29sZS5sb2coT2JqZWN0LmtleXMoZXJyb3IpLCBlcnJvci5tZXNzYWdlKTsKICAgICAgICAgICAgfQogICAgICAgIH0sCgogICAgICAgIGFzeW5jIHNhdmUoaWQpewogICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgaWYgKGlkKSB7CiAgICAgICAgICAgICAgICAgICAgYXdhaXQgdGhpcy5heGlvcy5wdXQocHJvY2Vzcy5lbnYuVlVFX0FQUF9JUF9TRVJWRVIgKyAnL2NhbWVyYScsIHsgY2FtZXJhX2RhdGEgOiB0aGlzLmNhbWVyYV9kYXRhIH0pCiAgICAgICAgICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLmF4aW9zLnBvc3QocHJvY2Vzcy5lbnYuVlVFX0FQUF9JUF9TRVJWRVIgKyAnL2NhbWVyYScsIHsgY2FtZXJhX2RhdGEgOiB0aGlzLmNhbWVyYV9kYXRhIH0pCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCgnL2ZhY2VfcmVjb2duaXRpb24vY2FtZXJhLycpCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICAgICAgICBhbGVydChlcnJvcikKICAgICAgICAgICAgfQogICAgICAgIH0sCgogICAgICAgIGRvTWF0aDogZnVuY3Rpb24gKGluZGV4KSB7CiAgICAgICAgICAgIHJldHVybiBpbmRleCsxCiAgICAgICAgfSwKICAgIH0KICB9Cg=="},{"version":3,"sources":["FaceCameraForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"FaceCameraForm.vue","sourceRoot":"src/pages/face_recognition","sourcesContent":["<template>\n  <v-stepper v-model=\"e1\">\n    <v-stepper-header>\n      <v-stepper-step :complete=\"e1 > 1\" step=\"1\">Camera Data</v-stepper-step>\n      <v-divider></v-divider>\n    </v-stepper-header>\n\n    <v-stepper-items>\n      <v-stepper-content step=\"1\">\n        <div v-if=\"error_show\">\n            <v-alert dense type=\"error\" outlined v-if=\"$v.camera_data.$anyError\">\n                <div v-if=\"!$v.camera_data.name.required\">Camera name is required</div>\n                <div v-if=\"!$v.camera_data.name.minLength\">Camera name minumum 4 character</div>\n                <div v-if=\"!$v.camera_data.location.required\">Location is required</div>\n                <div v-if=\"!$v.camera_data.ip_stream.required\">Ip Stream is required</div>\n                <div v-if=\"!$v.camera_data.ip_local.required\">Ip Local is required</div>\n                <div v-if=\"!$v.camera_data.longitude.decimal\">coordinate not longitude valid</div>\n                <div v-if=\"!$v.camera_data.latitude.decimal\">coordinate latitude not valid</div>\n                <div v-if=\"!$v.camera_data.port.required\">Port is required</div>\n                <div v-if=\"!$v.camera_data.port.between\">Port is not valid (min : 1025 and max: 65535)</div>\n            </v-alert>\n            <v-alert dense type=\"error\" outlined v-if=\"!statusConnection\">\n                Cannot connect stream server!\n            </v-alert>\n        </div>\n\n        <v-card>\n            <v-row class=\"pa-2 mt-n4 mb-n4\">\n                <v-col cols=\"6\">\n                    <p class=\"font-weight-regular mb-1\">Camera Name</p>\n                    <v-text-field v-model=\"camera_data.name\" solo label=\"Camera Name\"></v-text-field>\n                </v-col>\n                <v-col cols=\"6\">\n                    <p class=\"font-weight-regular mb-1\">IP Stream</p>\n                    <v-text-field v-model=\"camera_data.ip_stream\" solo label=\"IP Address\"></v-text-field>\n                </v-col>\n                <v-col class=\"mt-n10\" cols=\"6\">\n                    <p class=\"font-weight-regular mb-1\">Location</p>\n                    <v-textarea\n                    v-model=\"camera_data.location\"\n                    label=\"Location\"\n                    solo\n                    rows=\"1\"\n                    auto-grow\n                    ></v-textarea>\n                </v-col>\n                <v-col class=\"mt-n10\" cols=\"3\">\n                    <p class=\"font-weight-regular mb-1\">Longitude</p>\n                    <v-text-field v-model=\"camera_data.longitude\" solo label=\"Longitude\"></v-text-field>\n                </v-col>\n                <v-col class=\"mt-n10\" cols=\"3\">\n                    <p class=\"font-weight-regular mb-1\">Latitude</p>\n                    <v-text-field v-model=\"camera_data.latitude\" solo label=\"Latitude\"></v-text-field>\n                </v-col>\n                <v-col class=\"mt-n10\" cols=\"6\">\n                    <p class=\"font-weight-regular mb-1\">Port</p>\n                    <v-text-field v-model=\"camera_data.port\" solo label=\"ex: 9001\"></v-text-field>\n                </v-col>\n                <v-col class=\"mt-n10\" cols=\"6\">\n                    <p class=\"font-weight-regular mb-1\">Ip Server</p>\n                    <v-text-field v-model=\"camera_data.ip_local\" solo label=\"ex: htttp://127.0.0.1\"></v-text-field>\n                </v-col>\n            </v-row>\n            <v-btn\n                class=\"ma-2\"\n                color=\"primary\"\n                @click=\"save(camera_data.id)\"\n            >\n            Save\n            </v-btn>\n            <v-btn\n                class=\"ma-2\"\n                to=\"/face_recognition/camera\"\n            >\n            Cancel\n            </v-btn>\n        </v-card>\n      </v-stepper-content>\n\n    </v-stepper-items>\n  </v-stepper>\n</template>\n\n<script>\nimport { required, minLength, numeric, between, decimal } from 'vuelidate/lib/validators'\n\n  export default {\n    data () {\n      return {\n        e1: 1,\n        error_show: false,\n        camera_data : {\n            name: null,\n            location: null,\n            ip_stream: null,\n            ip_local: null,\n            longitude: null, \n            latitude: null,\n            port: null\n        },\n        statusConnection: true,\n        };\n    },\n\n    validations: {\n        camera_data:{\n            name: {\n                required,\n                minLength: minLength(4)\n            },\n            location: {\n                required,\n            },\n            ip_stream:{\n                required\n            },\n            longitude:{\n                decimal\n            },\n            latitude:{\n                decimal\n            },\n            port:{\n                required,\n                numeric,\n                between: between(1025, 65535)\n            },\n            ip_local:{\n                required,\n            }\n        },        \n    },\n\n    created() {\n        this.$Progress.start()\n        if (this.$route.params.id) {\n            this.initialize(this.$route.params.id)\n        }\n        this.$Progress.finish()\n    },\n\n    methods: {\n        async initialize(id_camera){\n          try {\n              const respone_camera = await this.axios.get(process.env.VUE_APP_IP_SERVER + '/camera/' + id_camera)\n              this.camera_data = respone_camera.data\n            } catch (error) {\n                window.console.log(Object.keys(error), error.message);\n            }\n        },\n\n        async save(id){\n            try {\n                if (id) {\n                    await this.axios.put(process.env.VUE_APP_IP_SERVER + '/camera', { camera_data : this.camera_data })\n                }else{\n                    await this.axios.post(process.env.VUE_APP_IP_SERVER + '/camera', { camera_data : this.camera_data })\n                }\n                this.$router.push('/face_recognition/camera/')\n            } catch (error) {\n                alert(error)\n            }\n        },\n\n        doMath: function (index) {\n            return index+1\n        },\n    }\n  }\n</script>"]}]}