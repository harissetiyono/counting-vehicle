{"remainingRequest":"/Users/haris/Development/counting/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/haris/Development/counting/client/src/pages/LiveStream.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/haris/Development/counting/client/src/pages/LiveStream.vue","mtime":1576471339863},{"path":"/Users/haris/Development/counting/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/haris/Development/counting/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/haris/Development/counting/client/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/haris/Development/counting/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/haris/Development/counting/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBWdWVMb2FkSW1hZ2UgZnJvbSAndnVlLWxvYWQtaW1hZ2UnCiAgZXhwb3J0IGRlZmF1bHQgewogICAgY29tcG9uZW50czogewogICAgICAndnVlLWxvYWQtaW1hZ2UnOiBWdWVMb2FkSW1hZ2UKICAgIH0sCiAgICBwcm9wczogewogICAgICBzb3VyY2U6IFN0cmluZywKICAgIH0sCiAgICBkYXRhOiAoKSA9PiAoewogICAgICBjYW1lcmFzOltdLAogICAgICBpbWFnZURlZmF1bHQ6ICcvc3RvcmFnZS9kZWZhdWx0L2xvYWRpbmcuZ2lmJywKICAgICAgaW1hZ2VFcnJvcjogJy9zdG9yYWdlL2RlZmF1bHQvaW1hZ2UtNDA0LnBuZycsCiAgICAgIHZpZGVvOiAnJwogICAgfSksCgogICAgY3JlYXRlZCAoKSB7CiAgICAgIHRoaXMuaW5pdGlhbGl6ZSgpCiAgICB9LAoKICAgIG1ldGhvZHM6IHsKICAgICAgYXN5bmMgaW5pdGlhbGl6ZSAoKSB7CiAgICAgICAgbGV0IF9zZWxmID0gdGhpcwogICAgICAgIGNvbnN0IHsgZGF0YSB9ID0gYXdhaXQgdGhpcy5heGlvcy5nZXQoJ2h0dHA6Ly8xMjcuMC4wLjE6ODAwMS9jYW1lcmEnKQogICAgICAgIHRoaXMuY2FtZXJhcyA9IGRhdGEKCiAgICAgICAgZGF0YS5mb3JFYWNoKChlbGVtZW50LCBpKSA9PiB7CiAgICAgICAgICB0aGlzLmF4aW9zLmdldCgnaHR0cDovL2xvY2FsaG9zdDonICsgZWxlbWVudC5wb3J0KS50aGVuKGZ1bmN0aW9uKCl7CiAgICAgICAgICAgIF9zZWxmLmNhbWVyYXNbaV0uc3RhdHVzID0gMQogICAgICAgICAgICAvLyBsZXQgcmFuZG9tID0gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyaW5nKDIsIDE1KSArIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cmluZygyLCAxNSkKICAgICAgICAgICAgLy8gX3NlbGYuY2FtZXJhc1tpXS5zdHJlYW0gPSAnaHR0cDovL2xvY2FsaG9zdDonICsgZWxlbWVudC5wb3J0ICsgJy8nICsgcmFuZG9tICsgJy9zdHJlYW0ubWpwZycKICAgICAgICAgICAgLy8gX3NlbGYuY2FtZXJhc1tpXS5zdHJlYW1TdGF0dXMgPSB0cnVlCiAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbihlcnJvcil7CiAgICAgICAgICAgICAgaWYgKCFlcnJvci5yZXNwb25zZSkgewogICAgICAgICAgICAgICAgLy8gbmV0d29yayBlcnJvcgogICAgICAgICAgICAgICAgX3NlbGYuY2FtZXJhc1tpXS5zdGF0dXMgPSAwCiAgICAgICAgICAgICAgICBfc2VsZi5jYW1lcmFzW2ldLnN0cmVhbVN0YXR1cyA9IGZhbHNlCiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIC8vIGh0dHAgc3RhdHVzIGNvZGUKICAgICAgICAgICAgICAgIGNvbnN0IGNvZGUgPSBlcnJvci5yZXNwb25zZS5zdGF0dXMKICAgICAgICAgICAgICAgIHdpbmRvdy5jb25zb2xlLmxvZyhjb2RlKQogICAgICAgICAgICAgICAgLy8gcmVzcG9uc2UgZGF0YQogICAgICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBlcnJvci5yZXNwb25zZS5kYXRhCiAgICAgICAgICAgICAgICB3aW5kb3cuY29uc29sZS5sb2cocmVzcG9uc2UpCiAgICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICAgIH0sCgogICAgICB2aWRlb1N0cmVhbShwb3J0KXsKICAgICAgICAgIGxldCByYW5kb20gPSBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHJpbmcoMiwgMTUpICsgTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyaW5nKDIsIDE1KQogICAgICAgICAgcmV0dXJuICJodHRwOi8vMTI3LjAuMC4xOiIgKyBwb3J0ICsgIi8iICsgcmFuZG9tICsgIi9zdHJlYW0ubWpwZyIKICAgICAgfSwKICAgIH0sCiAgfQo="},{"version":3,"sources":["LiveStream.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"LiveStream.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n    <v-container fluid grid-list-md>\n      <v-layout wrap>\n        <v-flex d-flex xs12 sm6 md3 v-for=\"item of cameras\" :key=\"item.id_cctv\">\n          <v-card width=\"300\">\n            <!-- <div v-if=\"item.streamStatus\">\n              <v-img :src=\"videoStream(item.port)\"/>\n            </div>\n            <div v-else>\n              <v-img src=\"@/assets/offline.jpg\"/>\n            </div> -->\n            <!-- <v-img slot=\"error\" src=\"@/assets/offline.jpg\" aspect-ratio=\"1.7\"/> -->\n            <vue-load-image>\n              <img slot=\"image\" :src=\"'http://localhost:'+item.port+ '/' + Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15) +'/stream.mjpg'\" style=\"width: 100%\"/>\n              <v-img slot=\"preloader\" src=\"@/assets/preloader.gif\"/>\n              <v-img slot=\"error\" src=\"@/assets/offline.jpg\" aspect-ratio=\"1.7\"/>\n            </vue-load-image>\n              <v-card-actions>\n                <v-spacer></v-spacer>\n                    <v-btn :to=\"'/live/'+item.id\">\n                      {{ item.name + ' ' }}\n                      <div v-if=\"item.status == 1\">\n                        <v-icon class=\"pl-2\" color=\"green\" left >mdi-brightness-1</v-icon>\n                      </div>\n                      <div v-else>\n                        <v-icon class=\"pl-2\" color=\"red\" left >mdi-brightness-1</v-icon>\n                      </div>\n                    </v-btn>\n                <v-spacer></v-spacer>\n              </v-card-actions>\n          </v-card>\n        </v-flex>\n      </v-layout>\n    </v-container>\n\n</template>\n\n<script>\nimport VueLoadImage from 'vue-load-image'\n  export default {\n    components: {\n      'vue-load-image': VueLoadImage\n    },\n    props: {\n      source: String,\n    },\n    data: () => ({\n      cameras:[],\n      imageDefault: '/storage/default/loading.gif',\n      imageError: '/storage/default/image-404.png',\n      video: ''\n    }),\n\n    created () {\n      this.initialize()\n    },\n\n    methods: {\n      async initialize () {\n        let _self = this\n        const { data } = await this.axios.get('http://127.0.0.1:8001/camera')\n        this.cameras = data\n\n        data.forEach((element, i) => {\n          this.axios.get('http://localhost:' + element.port).then(function(){\n            _self.cameras[i].status = 1\n            // let random = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\n            // _self.cameras[i].stream = 'http://localhost:' + element.port + '/' + random + '/stream.mjpg'\n            // _self.cameras[i].streamStatus = true\n          }).catch(function(error){\n              if (!error.response) {\n                // network error\n                _self.cameras[i].status = 0\n                _self.cameras[i].streamStatus = false\n              } else {\n                // http status code\n                const code = error.response.status\n                window.console.log(code)\n                // response data\n                const response = error.response.data\n                window.console.log(response)\n              }\n          });\n        });\n      },\n\n      videoStream(port){\n          let random = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\n          return \"http://127.0.0.1:\" + port + \"/\" + random + \"/stream.mjpg\"\n      },\n    },\n  }\n</script>\n"]}]}