{"remainingRequest":"/Users/haris/Development/counting/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/haris/Development/counting/client/src/pages/LiveDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/haris/Development/counting/client/src/pages/LiveDetail.vue","mtime":1579251647025},{"path":"/Users/haris/Development/counting/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/haris/Development/counting/client/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/haris/Development/counting/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/haris/Development/counting/client/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/haris/Development/counting/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/haris/Development/counting/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["LiveDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"LiveDetail.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n    <v-row>\n      <v-col\n        :cols=\"12\"\n        md=\"8\"\n      >\n      <v-alert \n        v-model=\"alert\" \n        type=\"error\"\n        dense\n      >\n        {{ error_text }}\n      </v-alert>\n        <v-card\n          class=\"pa-2\"\n          tile\n          outlined\n        >\n        <!-- <div class=\"pa-2\">\n          <div v-if=\"streamStatus\">\n            <v-img :src=\"videoDefault\"/>\n          </div>\n          <div v-else>\n            <v-img src=\"@/assets/offline.jpg\"/>\n          </div>\n        </div>  -->\n        <vue-load-image>\n          <img slot=\"image\" :src=\"videoDefault\" style=\"width: 100%\"/>\n          <v-img slot=\"preloader\" src=\"@/assets/preloader.gif\"/>\n          <v-img slot=\"error\" src=\"@/assets/offline.jpg\" aspect-ratio=\"1.7\"/>\n        </vue-load-image>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n            <v-chip\n              class=\"ma-2\"\n              color=\"blue\"\n              outlined\n            >\n              <v-avatar left>\n                <v-icon>mdi-car</v-icon>\n              </v-avatar>\n              Mobil : {{ mobil_in + ' | ' + mobil_out}}\n            </v-chip>\n\n            <v-chip\n              class=\"ma-2\"\n              color=\"green\"\n              outlined\n            >\n              <v-avatar left>\n                <v-icon>mdi-motorbike</v-icon>\n              </v-avatar>\n              Motor : {{ motor_up + ' | ' + motor_down}}\n            </v-chip>\n\n            <v-chip\n              class=\"ma-2\"\n              color=\"orange\"\n              outlined\n            >\n              <v-avatar left>\n                <v-icon>mdi-truck</v-icon>\n              </v-avatar>\n              Truck : {{ truck_up + ' | ' + truck_down}}\n            </v-chip>\n\n            <v-chip\n              class=\"ma-2\"\n              color=\"red\"\n              outlined\n            >\n              <v-avatar left>\n                <v-icon>mdi-bus</v-icon>\n              </v-avatar>\n              Bus : {{ bus_up + ' | ' + bus_down }}\n            </v-chip>\n            <v-spacer></v-spacer>\n            <v-tooltip top>\n                <template v-slot:activator=\"{ on }\">\n                    <v-btn color=\"green\" v-on=\"on\" fab small dark @click=\"checkConnection(port)\">\n                      <v-icon>mdi-refresh</v-icon>\n                    </v-btn>\n                </template>\n                <span>Refresh Video</span>\n            </v-tooltip>\n        </v-card-actions>\n        </v-card>\n      </v-col>\n\n      <v-col\n        :cols=\"12\"\n        md=\"4\"\n      >\n         <v-card\n          class=\"pa-2\"\n          height=\"430\"\n          tile\n          outlined\n        >\n        <v-select\n            v-model=\"cameras\"\n            :items=\"camera_list\"\n            item-value=\"id\"\n            item-text=\"name\"\n            @change=\"changeRoute\"\n            filled\n            dense\n            label=\"Camera Active\"\n          ></v-select>\n          <div v-if=\"chartHide\">\n            <v-img src=\"@/assets/no_result.gif\"></v-img>\n          </div>\n          <div v-else>\n            <v-list-item-content>\n              <div class=\"overline\">Percentage</div>\n            </v-list-item-content>\n            <v-layout justify-center>\n              <apexchart type=pie width=\"350\" :options=\"chartOptionsPie\" :series=\"seriesPie\" />\n            </v-layout>\n            <div class=\"text-center mt-4\">\n              <v-btn-toggle\n                v-model=\"id_lane\"\n                rounded\n                dense\n              >\n                <v-btn value=\"In\" @click=\"id_lane = 'In'\">\n                  <v-icon>mdi-arrow-up-circle</v-icon>\n                </v-btn>\n                <v-btn value=\"all\" @click=\"id_lane = 'all'\">\n                  <v-icon>mdi-swap-vertical-bold</v-icon>\n                </v-btn>\n                <v-btn value=\"Out\" @click=\"id_lane = 'Out'\">\n                  <v-icon>mdi-arrow-down-circle</v-icon>\n                </v-btn>\n              </v-btn-toggle>\n            </div>\n          </div>\n        </v-card>\n      </v-col>\n      \n      <v-col\n        cols=\"12\"\n      >\n        <v-card\n          class=\"pa-2 justify-center\"\n          outlined\n          tile\n        >\n          <div v-if=\"chartHide\">\n            <v-layout justify-center>\n                <v-img src=\"@/assets/no_result.gif\" max-width=\"500\"></v-img>\n            </v-layout>\n          </div>\n          <div v-else>\n            <v-list-item-content>\n              <div class=\"overline\">Traffic Today</div>\n            </v-list-item-content>\n            <apexchart type=line height=\"400\" :options=\"chartOptions\" :series=\"series\" />\n          </div>\n        </v-card>\n      </v-col>\n     \n      <v-snackbar\n        v-model=\"snackbar\"\n        :timeout=\"timeout\"\n        :color=\"color_snackbar\"\n      >\n        {{ text }}\n        <v-btn\n          color=\"white\"\n          text\n          @click=\"snackbar = false\"\n        >\n          Close\n        </v-btn>\n      </v-snackbar>\n    </v-row>\n</template>\n\n<script>\nimport VueApexCharts from 'vue-apexcharts'\nimport moment from 'moment'\nimport VueLoadImage from 'vue-load-image'\n\n  export default {\n    components: { apexchart: VueApexCharts, 'vue-load-image': VueLoadImage },\n    props: {\n      source: String,\n    },\n    data: () => ({\n        snackbar: false,\n        text: '',\n        timeout: 3000,\n        color_snackbar: '',\n\n        alert : false,\n        error_text: '',\n\n        id_camera : '',\n        id_lane : 'all',\n        port: '',\n        cameras:[],\n        camera_list:[],\n        videoDefault: \"@/assets/loading.gif\",\n        start_date: moment().tz('Asia/Jakarta').startOf('day').format('YYYY-MM-DD'),\n        end_date: moment().tz('Asia/Jakarta').endOf('day').format('YYYY-MM-DD'),\n        chartHide : false,\n        no_result: '@/assets/offline.jpg',\n        interval_select: {\n          'interval_id' : \"1h\",\n        },\n        interval: [\n          {\n            'interval_id' : \"1h\",\n            'interval_name' : \"1 Hours\",\n          },\n          {\n            'interval_id' : \"3h\",\n            'interval_name' : \"3 Hours\",\n          },\n          {\n            'interval_id' : \"1d\",\n            'interval_name' : \"1 Day\",\n          },\n          {\n            'interval_id' : \"1w\",\n            'interval_name' : \"1 Week\",\n          },\n        ],\n\n        realtime: true,\n        seriesPie: [],\n        chartOptionsPie: {\n          labels: [],\n          chart: {\n            width: '100%'\n          },\n          legend: {\n                position: 'bottom'\n          },\n          responsive: [{\n            breakpoint: 480,\n            options: {\n              chart: {\n                width: '100%'\n              },\n              legend: {\n                position: 'bottom'\n              }\n            }\n          }]\n        },\n\n        series: [\n          {\n            'name' : 'mobil',\n            'data' : [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n          },\n          {\n            'name' : 'motor',\n            'data' : [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n          },\n          {\n            'name' : 'truck',\n            'data' : [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n          },\n          {\n            'name' : 'bus',\n            'data' : [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n          }\n        ],\n        chartOptions: {\n          chart: {\n            shadow: {\n              enabled: true,\n              color: '#000',\n              top: 18,\n              left: 7,\n              blur: 10,\n              opacity: 1\n            },\n            toolbar: {\n              show: true\n            }\n          },\n\n          colors: ['rgb(0,134,251)', 'rgb(0,227,150)', 'rgb(254,176,25)', 'rgb(255,69,96)'],\n          dataLabels: {\n            enabled: true,\n          },\n          stroke: {\n            curve: 'smooth'\n          },\n          title: {\n            text: 'Live traffic',\n            align: 'left'\n          },\n          grid: {\n            borderColor: '#e7e7e7',\n            row: {\n              colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\n              opacity: 0.5\n            },\n          },\n          markers: {\n            size: 6\n          },\n          xaxis: {\n            categories: ['00:00','01:00','02:00','03:00','04:00','05:00','06:00','07:00','08:00','09:00','10:00','11:00','12:00','13:00','14:00','15:00','16:00','17:00','18:00','19:00','20:00','21:00','22:00','23:00'],\n            title: {\n              text: 'Time'\n            },\n            labels: {\n              rotate: -45\n            },\n          },\n          yaxis: {\n            title: {\n              text: 'Count'\n            },\n          },\n          legend: {\n            position: 'top',\n            horizontalAlign: 'right',\n            floating: true,\n            offsetY: -25,\n            offsetX: -5\n          }\n        },\n\n        mobil_in : 0,\n        mobil_out : 0,\n\n        motor_up : 0,\n        motor_down : 0,\n\n        truck_up : 0,\n        truck_down : 0,\n        \n        bus_up : 0,\n        bus_down : 0,\n\n        timer: '',\n        timer_live: '',\n        streamStatus: false,\n        hours : ['00:00','01:00','02:00','03:00','04:00','05:00','06:00','07:00','08:00','09:00','10:00','11:00','12:00','13:00','14:00','15:00','16:00','17:00','18:00','19:00','20:00','21:00','22:00','23:00']\n    }),\n\n    created () {\n      this.$Progress.start()\n      this.id_camera = this.$route.params.id\n      this.initialize()      \n    },\n    mounted(){\n      this.$Progress.finish()\n    },\n\n    watch: {\n        id_camera:function() {\n          this.$socket.emit('join', this.$route.params.id);\n          this.getData(this.$route.params.id)\n          this.traffic()\n          this.pie()\n          this.getLiveCount()\n        },\n\n        id_lane:function(){\n          window.console.log(this.id_lane)\n          this.pie()\n          this.traffic()\n        },\n        \n        realtime:function() {\n          if (this.realtime) {\n            this.startIntervalGraph()\n          }else{\n            clearInterval(this.timer)\n          }\n        }\n    },\n\n    methods: {\n        async initialize () {\n          const { data } = await this.$http.get(process.env.VUE_APP_IP_SERVER + '/camera?system=counting')\n          this.camera_list = data\n        },\n\n        async getData(id_camera){\n          try {\n              const { data } = await this.axios.get(process.env.VUE_APP_IP_SERVER + '/camera/' + id_camera)\n              this.cameras = data\n              this.port = data['port']\n              this.checkConnection(this.port)\n            } catch (error) {\n                window.console.log(Object.keys(error), error.message);\n            }\n        },\n\n        async traffic(){\n          var hours = ['00:00','01:00','02:00','03:00','04:00','05:00','06:00','07:00','08:00','09:00','10:00','11:00','12:00','13:00','14:00','15:00','16:00','17:00','18:00','19:00','20:00','21:00','22:00','23:00']\n          try {\n            const { data } = await this.axios.get(process.env.VUE_APP_IP_SERVER + '/trend/'+ this.$route.params.id +'?start_date=&end_date=&interval=' + this.interval_select.interval_id + '&lane=' + this.id_lane)\n            // const { data } = await this.axios.get(process.env.VUE_APP_IP_SERVER + 'trend/'+ this.$route.params.id +'?start_date=2019-12-13&end_date=2019-12-13&interval=' + this.interval_select.interval_id + '&lane=' + this.id_lane)\n            data.datasets.forEach((value, index) => {\n              Object.keys(value.data).forEach((hour) => {\n                var index_hour = hours.indexOf(hour);\n                this.series[index]['data'][index_hour] = value.data[hour]\n              });\n            });\n            this.chartOptions = {\n              xaxis : {\n                labels: {\n                  rotate: -45\n                },\n              }\n            }\n            this.alert = false\n          } catch (error) {\n            this.error_text = \"Can't connect database !\"\n            this.alert = true\n          }\n        },\n\n        async pie(){\n          try {\n            const { data } = await this.axios.get(process.env.VUE_APP_IP_SERVER + '/pie/'+ this.$route.params.id +'?start_date=&end_date=&lane=' + this.id_lane)\n            // const { data } = await this.axios.get(process.env.VUE_APP_IP_SERVER + 'pie/'+ this.$route.params.id +'?start_date=2019-01-10&end_date=2019-12-13&lane=' + this.id_lane)\n            this.seriesPie = data.datasets\n            this.chartOptionsPie = {\n              labels : data.categories,\n              legend: {\n                position: 'bottom'\n              },\n              responsive: [{\n                breakpoint: 950,\n                options: {\n                  chart: {\n                    width: '350'\n                  },\n                  legend: {\n                    position: 'bottom'\n                  }\n                }\n              }]\n            }\n            if (data.datasets.length == 0) {\n              this.chartHide = true\n            }else{\n              this.chartHide = false\n            }\n          } catch (error) {\n            window.console.log(error)\n          }\n        },\n\n        async getLiveCount(){\n          try {\n            const { data } = await this.axios.get(process.env.VUE_APP_IP_SERVER + 'realtime/count/' + this.id_camera)\n            this.mobil_in = data.mobil[0]\n            this.mobil_out = data.mobil[1]\n            this.motor_up = data.motor[0]\n            this.motor_down = data.motor[1]\n            this.truck_up = data.truck[0]\n            this.truck_down = data.truck[1]\n            this.bus_up = data.bus[0]\n            this.bus_down = data.bus[1]\n          } catch (error) {\n            this.text = \"Live count error ( \"  + error + \" )\"\n            this.color_snackbar = \"red darken-1\"\n            this.alert = true\n            this.chartHide = true\n          }\n        },\n\n        changeRoute(e){\n          this.$socket.emit('leave', this.$route.params.id);\n          this.$router.push({path: '/live/' + e })\n          this.id_camera = this.$route.params.id\n        },\n\n        dateFilter(){\n          window.console.log(this.id_lane)\n          this.traffic()\n          this.pie()\n        },\n\n        startIntervalGraph: function () {\n          this.timer = setInterval(() => {\n            this.traffic()\n            this.pie()\n          }, 3000);\n        },\n\n        checkConnection(port){\n          const _self = this\n          this.axios.get(process.env.VUE_APP_IP_SERVER_WITHOUT_PORT + ':' + port).then(function(){\n            _self.videoStream()\n          }).catch(function(error){\n              if (!error.response) {\n                window.console.log(error)\n                _self.streamStatus = false\n                _self.imageLoadError()\n                _self.text = \"Can't connect video stream !\"\n                _self.color_snackbar = \"red darken-1\"\n              } else {\n                const code = error.response.status\n                const response = error.response.data\n                _self.text = \"Can't connect video stream ! (\" + code + \") response: \" +  response\n                _self.color_snackbar = \"yellow darken-1\"\n              }\n              _self.snackbar = true\n          });\n        },\n\n        videoStream(){\n            let random = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\n            this.videoDefault = process.env.VUE_APP_IP_SERVER_WITHOUT_PORT + \":\" + this.port + \"/\" + random + \"/stream.mjpg\"\n        },\n\n        imageLoadError(){\n            this.videoDefault = require('@/assets/offline.jpg')\n        },\n\n        addCount(data){\n          const now = moment().tz('Asia/Jakarta').format('HH:00')\n          let index_hour = this.hours.indexOf(now);\n          window.console.log(index_hour)\n          switch (data.categories) {\n            case 'mobil':\n              if (data.lane == 'In') {\n                this.mobil_in += 1\n              }else{\n                this.mobil_out += 1\n              }\n              this.series[0]['data'][index_hour] = this.series[0]['data'][index_hour]+1\n              this.reloadChartTrend()\n              break;\n            case 'motor':\n              if (data.lane == 'In') {\n                this.motor_up += 1\n              }else{\n                this.motor_down += 1\n              }\n              this.series[1]['data'][index_hour] = this.series[1]['data'][index_hour]+1\n              this.reloadChartTrend()\n              break;\n            case 'truck':\n              if (data.lane == 'In') {\n                this.truck_up += 1\n              }else{\n                this.truck_down += 1\n              }\n              this.series[2]['data'][index_hour] = this.series[2]['data'][index_hour]+1\n              this.reloadChartTrend()\n              break;\n            case 'bus':\n              if (data.lane == 'In') {\n                this.bus_up += 1\n              }else{\n                this.bus_down += 1\n              }\n              this.series[2]['data'][index_hour] = this.series[2]['data'][index_hour]+1\n              this.reloadChartTrend()\n              break;\n            default:\n              break;\n          }\n        },\n\n        reloadChartTrend (){\n          this.chartOptions = {\n              xaxis : {\n                labels: {\n                  rotate: -45\n                },\n              }\n            }\n        }\n    },\n\n    sockets: {\n      connect: function (){\n          window.console.log('socket connected')\n      },\n      counting_live: function (data) {\n          this.addCount(data)\n      }\n    },\n\n    beforeDestroy: function() {\n        this.$socket.emit('leave', this.$route.params.id);\n        this.videoDefault = require('@/assets/offline.jpg')\n        clearInterval(this.timer)\n    },\n\n  }\n</script>\n"]}]}