{"remainingRequest":"/Users/haris/Development/counting/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/haris/Development/counting/client/src/pages/anpr/ANPRFiltering.vue?vue&type=template&id=141f07c2&","dependencies":[{"path":"/Users/haris/Development/counting/client/src/pages/anpr/ANPRFiltering.vue","mtime":1579160228496},{"path":"/Users/haris/Development/counting/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/haris/Development/counting/client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/haris/Development/counting/client/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/haris/Development/counting/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/haris/Development/counting/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}