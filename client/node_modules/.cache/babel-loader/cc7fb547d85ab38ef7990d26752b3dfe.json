{"remainingRequest":"/Users/haris/Development/counting/client/node_modules/babel-loader/lib/index.js!/Users/haris/Development/counting/client/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Users/haris/Development/counting/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/haris/Development/counting/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/haris/Development/counting/client/src/pages/Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/haris/Development/counting/client/src/pages/Dashboard.vue","mtime":1578890309690},{"path":"/Users/haris/Development/counting/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/haris/Development/counting/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/haris/Development/counting/client/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/haris/Development/counting/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/haris/Development/counting/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<v-row>\n    <v-col\n      cols=\"12\"\n      md=\"8\"\n    >\n      <v-card\n        class=\"pa-2\"\n        outlined\n        tile\n      >\n        <apexchart type=line height=\"350\" :options=\"chartOptions\" :series=\"series\" />\n      </v-card>\n    </v-col>\n    <v-col\n      cols=\"12\"\n      md=\"4\"\n    >\n      <v-card\n        class=\"pa-2\"\n        outlined\n        tile\n        height=\"385\"\n      >\n        <v-list-item-content>\n          <div class=\"overline mb-4\">Percentage Today</div>\n        </v-list-item-content>\n        <apexchart type=pie height=\"90%\" :options=\"chartOptionsPie\" :series=\"seriesPie\" />\n      </v-card>\n    </v-col>\n\n    <v-col\n      cols=\"12\"\n      md=\"6\"\n    >\n      <v-card\n        class=\"pa-2\"\n        outlined\n        tile\n      >\n        <apexchart type=bar :options=\"chartOptionsBar\" :series=\"seriesWeekly\" />\n      </v-card>\n    </v-col>\n    <v-col\n      cols=\"12\"\n      md=\"6\"\n    >\n      <v-card\n        class=\"pa-2\"\n        outlined\n        tile\n      >\n        <apexchart type=heatmap :options=\"chartOptionsHeatmap\" :series=\"seriesHeatmap\" />\n      </v-card>\n    </v-col>\n</v-row>\n</template>\n\n<script>\nimport VueApexCharts from 'vue-apexcharts'\n  export default {\n    components: { apexchart: VueApexCharts },\n    props: {\n      source: String,\n    },\n    data: () => ({\n        id_camera : '',\n        camera_list:[],\n        cameras: [],\n\n        series: [\n          {\n            'name' : 'mobil',\n            'data' : [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n          },\n          {\n            'name' : 'motor',\n            'data' : [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n          },\n          {\n            'name' : 'truck',\n            'data' : [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n          },\n          {\n            'name' : 'bus',\n            'data' : [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n          }\n        ],\n        chartOptions: {\n          chart: {\n            shadow: {\n              enabled: true,\n              color: '#000',\n              top: 18,\n              left: 7,\n              blur: 10,\n              opacity: 1\n            },\n            toolbar: {\n              show: false\n            },\n            animations: {\n                enabled: true,\n                easing: 'easeinout',\n                speed: 800,\n                animateGradually: {\n                    enabled: true,\n                    delay: 150\n                },\n                dynamicAnimation: {\n                    enabled: true,\n                    speed: 350\n                }\n            }\n          },\n\n          colors: ['rgb(0,134,251)', 'rgb(0,227,150)', 'rgb(254,176,25)', 'rgb(255,69,96)'],\n          dataLabels: {\n            enabled: true,\n          },\n          stroke: {\n            curve: 'smooth'\n          },\n          title: {\n            text: 'Live traffic today',\n            align: 'left'\n          },\n          grid: {\n            borderColor: '#e7e7e7',\n            row: {\n              colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\n              opacity: 0.5\n            },\n          },\n          markers: {\n            size: 6\n          },\n          xaxis: {\n            categories: ['00:00','01:00','02:00','03:00','04:00','05:00','06:00','07:00','08:00','09:00','10:00','11:00','12:00','13:00','14:00','15:00','16:00','17:00','18:00','19:00','20:00','21:00','22:00','23:00'],\n            title: {\n              text: 'Time'\n            },\n            labels: {\n              rotate: -45\n            },\n          },\n          yaxis: {\n            title: {\n              text: 'Count'\n            },\n          },\n          legend: {\n            position: 'top',\n            horizontalAlign: 'right',\n            floating: true,\n            offsetY: -25,\n            offsetX: -5\n          }\n        },\n\n        seriesWeekly: [],\n        chartOptionsBar: {\n          chart: {\n            height: 500,\n            stacked: true,\n            toolbar: {\n              show: true\n            },\n            zoom: {\n              enabled: true\n            }\n          },\n          title: {\n            text: 'Last 7 day traffic',\n            align: 'left'\n          },\n          responsive: [{\n            breakpoint: 480,\n            options: {\n              legend: {\n                position: 'bottom',\n                offsetX: -10,\n                offsetY: 0\n              }\n            }\n          }],\n          plotOptions: {\n            bar: {\n              horizontal: false,\n            },\n          },\n\n          xaxis: {\n            categories: [],\n            labels: {\n              rotate: -45\n            },\n          },\n          legend: {\n            position: 'right',\n            offsetY: 40\n          },\n          fill: {\n            opacity: 1\n          }\n        },\n\n        seriesPie: [],\n        chartOptionsPie: {\n          labels: ['Mobil', 'Motor', 'Truck', 'Bus'],\n          chart: {\n                width: 300\n          },\n          legend: {\n            position: 'bottom'\n          },\n          responsive: [{\n            breakpoint: 480,\n            options: {\n              chart: {\n                width: 300\n              },\n              legend: {\n                position: 'bottom'\n              }\n            }\n          }]\n        },\n\n        seriesHeatmap: [],\n        chartOptionsHeatmap: {\n          chart: {\n                height: 500,\n                type: 'heatmap'\n            },\n            dataLabels: {\n                enabled: false,\n            },\n            plotOptions: {\n                heatmap: {\n                    colorScale: {\n                        inverse: true\n                    }\n                }\n            },\n            theme: {\n              pallete: 'palette7'\n            },\n            xaxis: {\n                type: 'category',\n                categories: []\n            },\n\n            title: {\n                text: 'Heatmap traffic per hours'\n            },\n        },\n        hours : ['00:00','01:00','02:00','03:00','04:00','05:00','06:00','07:00','08:00','09:00','10:00','11:00','12:00','13:00','14:00','15:00','16:00','17:00','18:00','19:00','20:00','21:00','22:00','23:00']\n    }),\n\n    created () {\n      this.$Progress.start()\n      this.traffic()\n      this.pie()\n      this.traffic_weekly()\n      this.heatmap()\n    },\n\n    mounted(){\n      this.$Progress.finish()\n    },\n\n    computed: {\n    },\n\n    methods: {\n      async initialize(){\n        try {\n            const { data } = await this.axios.get(process.env.VUE_APP_IP_SERVER + '/camera/')\n            this.cameras = data\n          } catch (error) {\n              window.console.log(Object.keys(error), error.message);\n          }\n      },\n\n      async traffic(){\n        const self = this\n        try {\n          const { data } = await this.axios.get(process.env.VUE_APP_IP_SERVER + '/trend?start_date=&end_date=&lane=all')\n          data.datasets.forEach((value, index) => {\n            Object.keys(value.data).forEach((hour) => {\n              var index_hour = self.hours.indexOf(hour);\n              this.series[index]['data'][index_hour] = value.data[hour]\n            });\n          });\n          this.chartOptions = {\n            xaxis : {\n              labels: {\n                rotate: -45\n              },\n            }\n          }\n        } catch (error) {\n          window.console.log(error)\n        }\n      },\n\n      async pie(){\n        try {\n          const { data } = await this.axios.get(process.env.VUE_APP_IP_SERVER + '/pie?start_date=&end_date=&lane=all')\n          this.seriesPie = data.datasets\n        } catch (error) {\n          window.console.log(error)\n        }\n      },\n\n      async heatmap(){\n        try {\n          const { data } = await this.axios.get(process.env.VUE_APP_IP_SERVER + '/heatmap')\n          this.seriesHeatmap = data.datasets\n          this.chartOptionsHeatmap = {\n            xaxis : {\n              type: 'category',\n              categories: data.date\n            },\n          }\n        } catch (error) {\n          window.console.log(error)\n        }\n      },\n\n      async traffic_weekly(){\n        try {\n          const { data } = await this.axios.get(process.env.VUE_APP_IP_SERVER + \n          '/weekly/trend')\n          this.seriesWeekly = data.datasets\n          this.chartOptionsBar = {\n            xaxis : {\n              categories : data.categories,\n              labels: {\n                rotate: -45\n              },\n            }\n          }\n        } catch (error) {\n          window.console.log(error)\n        }\n      },\n\n      changeRoute(){\n        window.console.log(\"sad\")\n      },\n    }\n\n  }\n</script>\n"],"sourceRoot":"src/pages"}]}