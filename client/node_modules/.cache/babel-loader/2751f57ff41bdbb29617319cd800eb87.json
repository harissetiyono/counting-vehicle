{"remainingRequest":"/Users/haris/Development/counting/client/node_modules/babel-loader/lib/index.js!/Users/haris/Development/counting/client/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Users/haris/Development/counting/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/haris/Development/counting/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/haris/Development/counting/client/src/pages/AddCamera.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/haris/Development/counting/client/src/pages/AddCamera.vue","mtime":1576071302307},{"path":"/Users/haris/Development/counting/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/haris/Development/counting/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/haris/Development/counting/client/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/haris/Development/counting/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/haris/Development/counting/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZGF0ZS50by1zdHJpbmciOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwp2YXIgd2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aDsKdmFyIGhlaWdodCA9IHdpbmRvdy5pbm5lckhlaWdodDsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBlMTogMSwKICAgICAgY2FtZXJhX2RhdGE6IHsKICAgICAgICBuYW1lOiBudWxsLAogICAgICAgIGxvY2F0aW9uOiBudWxsLAogICAgICAgIGlwX3N0cmVhbTogbnVsbCwKICAgICAgICBpcF9sb2NhbDogbnVsbCwKICAgICAgICBsb25naXR1ZGU6IG51bGwsCiAgICAgICAgbGF0aXR1ZGU6IG51bGwsCiAgICAgICAgcG9ydDogbnVsbAogICAgICB9LAogICAgICBzdGFnZVNpemU6IHsKICAgICAgICB3aWR0aDogd2lkdGgsCiAgICAgICAgaGVpZ2h0OiBoZWlnaHQKICAgICAgfSwKICAgICAgbGlzdDogW3sKICAgICAgICB4OiAwLAogICAgICAgIHk6IDAsCiAgICAgICAgcG9pbnQ6IFtdLAogICAgICAgIGNsb3NlZDogdHJ1ZSwKICAgICAgICBzdHJva2U6ICcjMDBhMWZmJywKICAgICAgICBwYXRoOiAnSU4nCiAgICAgIH1dLAogICAgICB0ZXh0OiAnJywKICAgICAgaW1hZ2U6IG51bGwsCiAgICAgIHNjYWxlOiBudWxsLAogICAgICBjb2xvcjogWycjMDBhMWZmJywgJyNmZjU3NTcnLCAnIzMyQjMzMicsICcjZmZjNjBhJ10sCiAgICAgIGl0ZW1zOiBbJ0lOJywgJ09VVCddCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHt9LAogIG1ldGhvZHM6IHsKICAgIHRlc3RDbGljazogZnVuY3Rpb24gdGVzdENsaWNrKGV2dCkgewogICAgICB2YXIgc3RhZ2UgPSBldnQudGFyZ2V0LmdldFN0YWdlKCk7CiAgICAgIHZhciBwb3MgPSBzdGFnZS5nZXRQb2ludGVyUG9zaXRpb24oKTsKICAgICAgdmFyIHggPSBNYXRoLnJvdW5kKHBvcy54KTsKICAgICAgdmFyIHkgPSBNYXRoLnJvdW5kKHBvcy55KTsKICAgICAgdmFyIGlkID0gdGhpcy5saXN0Lmxlbmd0aCAtIDE7CgogICAgICBpZiAodGhpcy5saXN0Lmxlbmd0aCA+IDQpIHsKICAgICAgICBhbGVydCgibWFrc2ltdW0gNCBsaW5lIik7CiAgICAgICAgdGhpcy4kZGVsZXRlKHRoaXMubGlzdCwgNCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgaWYgKHRoaXMubGlzdFtpZF0ucG9pbnQubGVuZ3RoID09IDQpIHsKICAgICAgICAgIHZhciBkYXRhID0gewogICAgICAgICAgICB4OiAwLAogICAgICAgICAgICB5OiAwLAogICAgICAgICAgICBwb2ludDogW3gsIHldLAogICAgICAgICAgICBjbG9zZWQ6IHRydWUsCiAgICAgICAgICAgIHN0cm9rZTogdGhpcy5jb2xvcltpZF0sCiAgICAgICAgICAgIHBhdGg6ICdJTicKICAgICAgICAgIH07CiAgICAgICAgICB0aGlzLmxpc3QucHVzaChkYXRhKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy5saXN0W2lkXS5wb2ludC5wdXNoKHgsIHkpOwogICAgICAgICAgdGhpcy5saXN0W2lkXS5zdHJva2UgPSB0aGlzLmNvbG9yW2lkXTsKICAgICAgICB9CiAgICAgIH0gLy8gd2luZG93LmNvbnNvbGUubG9nKHRoaXMubGlzdFtpZF0pCgoKICAgICAgdGhpcy50ZXh0ID0gIng6ICIgKyB4ICogMiArICIgYW5kICIgKyAieTogIiArIHkgKiAyOwogICAgICB3aW5kb3cuY29uc29sZS5sb2codGhpcy50ZXh0KTsKICAgIH0sCiAgICByZXNldDogZnVuY3Rpb24gcmVzZXQoKSB7CiAgICAgIHRoaXMubGlzdCA9IFt7CiAgICAgICAgeDogMCwKICAgICAgICB5OiAwLAogICAgICAgIHBvaW50OiBbXSwKICAgICAgICBjbG9zZWQ6IHRydWUsCiAgICAgICAgc3Ryb2tlOiAnYmxhY2snLAogICAgICAgIHBhdGg6ICdJTicKICAgICAgfV07CiAgICB9LAogICAgdGVzdFRleHQ6IGZ1bmN0aW9uIHRlc3RUZXh0KCkgewogICAgICB3aW5kb3cuY29uc29sZS5sb2codGhpcy5saXN0KTsKICAgIH0sCiAgICBkZWxMaW5lOiBmdW5jdGlvbiBkZWxMaW5lKGluZGV4KSB7CiAgICAgIHRoaXMuJGRlbGV0ZSh0aGlzLmxpc3QsIGluZGV4KTsKICAgIH0sCiAgICBzYXZlOiBmdW5jdGlvbiBzYXZlKCkgewogICAgICB2YXIgcmVzcG9uc2UgPSB0aGlzLmF4aW9zLnBvc3QoJ2h0dHA6Ly9sb2NhbGhvc3Q6ODAwMS9jYW1lcmEnLCB7CiAgICAgICAgY2FtZXJhX2RhdGE6IHRoaXMuY2FtZXJhX2RhdGEsCiAgICAgICAgbGluZV9wYXRoOiB0aGlzLmxpc3QKICAgICAgfSk7CiAgICAgIHdpbmRvdy5jb25zb2xlLmxvZyhyZXNwb25zZSk7CiAgICB9LAogICAgY29udGludWUxOiBmdW5jdGlvbiBjb250aW51ZTEoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgcmVzcG9uc2UgPSB0aGlzLmF4aW9zLnBvc3QoJ2h0dHA6Ly9sb2NhbGhvc3Q6ODAwMS9nZW5lcmF0ZScsIHsKICAgICAgICB1cmw6IHRoaXMuY2FtZXJhX2RhdGEuaXBfc3RyZWFtLAogICAgICAgIHBvcnQ6IHRoaXMuY2FtZXJhX2RhdGEucG9ydAogICAgICB9KTsKICAgICAgd2luZG93LmNvbnNvbGUubG9nKHRoaXMuY2FtZXJhX2RhdGEuaXBfc3RyZWFtKTsKICAgICAgd2luZG93LmNvbnNvbGUubG9nKHRoaXMuY2FtZXJhX2RhdGEucG9ydCk7CiAgICAgIHdpbmRvdy5jb25zb2xlLmxvZyhyZXNwb25zZSk7CiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzLmUxID0gMjsKICAgICAgICB2YXIgaW1hZ2UgPSBuZXcgd2luZG93LkltYWdlKCk7CiAgICAgICAgdmFyIHRvZGF5ID0gbmV3IERhdGUoKTsKICAgICAgICB2YXIgdGltZSA9IHRvZGF5LmdldEhvdXJzKCkgKyB0b2RheS5nZXRNaW51dGVzKCkgKyB0b2RheS5nZXRTZWNvbmRzKCk7CiAgICAgICAgaW1hZ2Uuc3JjID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6ODAwMS9zdG9yYWdlLycgKyBfdGhpcy5jYW1lcmFfZGF0YS5wb3J0ICsgJy5qcGc/dD0nICsgdGltZTsKCiAgICAgICAgaW1hZ2Uub25sb2FkID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgX3RoaXMuaW1hZ2UgPSBpbWFnZTsKICAgICAgICB9OwogICAgICB9LCAxMDAwMCk7CiAgICB9LAogICAgZG9NYXRoOiBmdW5jdGlvbiBkb01hdGgoaW5kZXgpIHsKICAgICAgcmV0dXJuIGluZGV4ICsgMTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["AddCamera.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-stepper v-model=\"e1\">\n    <v-stepper-header>\n      <v-stepper-step :complete=\"e1 > 1\" step=\"1\">Name of step 1</v-stepper-step>\n      <v-divider></v-divider>\n      <v-stepper-step :complete=\"e1 > 2\" step=\"2\">Name of step 2</v-stepper-step>\n      <v-divider></v-divider>\n      <v-stepper-step step=\"3\">Name of step 3</v-stepper-step>\n    </v-stepper-header>\n\n    <v-stepper-items>\n      <v-stepper-content step=\"1\">\n        <v-card>\n            <v-row class=\"pa-2 mt-n4 mb-n4\">\n                <v-col cols=\"6\">\n                    <p class=\"font-weight-regular mb-1\">Camera Name</p>\n                    <v-text-field v-model=\"camera_data.name\" solo label=\"Camera Name\"></v-text-field>\n                </v-col>\n                <v-col cols=\"6\">\n                    <p class=\"font-weight-regular mb-1\">IP Stream</p>\n                    <v-text-field v-model=\"camera_data.ip_stream\" solo label=\"IP Address\"></v-text-field>\n                </v-col>\n                <v-col class=\"mt-n10\" cols=\"6\">\n                    <p class=\"font-weight-regular mb-1\">Location</p>\n                    <v-textarea\n                    v-model=\"camera_data.location\"\n                    label=\"Location\"\n                    solo\n                    rows=\"1\"\n                    auto-grow\n                    ></v-textarea>\n                </v-col>\n                <v-col class=\"mt-n10\" cols=\"3\">\n                    <p class=\"font-weight-regular mb-1\">Longitude</p>\n                    <v-text-field v-model=\"camera_data.longitude\" solo label=\"Longitude\"></v-text-field>\n                </v-col>\n                <v-col class=\"mt-n10\" cols=\"3\">\n                    <p class=\"font-weight-regular mb-1\">Latitude</p>\n                    <v-text-field v-model=\"camera_data.latitude\" solo label=\"Latitude\"></v-text-field>\n                </v-col>\n                <v-col class=\"mt-n10\" cols=\"6\">\n                    <p class=\"font-weight-regular mb-1\">Port</p>\n                    <v-text-field v-model=\"camera_data.port\" solo label=\"ex: 9001\"></v-text-field>\n                </v-col>\n                <v-col class=\"mt-n10\" cols=\"6\">\n                    <p class=\"font-weight-regular mb-1\">Ip Server</p>\n                    <v-text-field v-model=\"camera_data.ip_local\" solo label=\"ex: htttp://127.0.0.1\"></v-text-field>\n                </v-col>\n            </v-row>\n            <v-btn\n                color=\"primary\"\n                @click=\"continue1\"\n            >\n            Continue\n            </v-btn>\n        </v-card>\n      </v-stepper-content>\n\n      <v-stepper-content step=\"2\">\n        <v-card\n          class=\"pa-2 mb-4\"\n          color=\"grey lighten-1\"\n        >\n            <v-row\n                align=\"center\"\n                justify=\"center\"\n            >\n                <v-col\n                    cols=\"12\"\n                    md=\"8\"\n                >\n                    <v-card\n                        class=\"pa-2\"\n                        max-width=\"800\"\n                        max-height=\"450\"\n                    >\n                        <v-stage ref=\"stage\" :config=\"stageSize\">\n                            <v-layer ref=\"layer\">\n                                    <v-image ref=\"image\" @click=\"testClick\" :config=\"{\n                                        image: image,\n                                        scale: {\n                                            x: 0.5,\n                                            y: 0.5\n                                        }\n                                        }\"\n                                    />\n\n                                <v-line \n                                v-for=\"item in list\"\n                                :key=\"item.id\"\n                                :config=\"{\n                                    x: 0,\n                                    y: 0,\n                                    points: item.point,\n                                    closed: true,\n                                    stroke: item.stroke,\n                                }\"\n                                />\n                                <v-text ref=\"text\" :config=\"{\n                                x: 10,\n                                y: 10,\n                                fontFamily: 'Calibri',\n                                fontSize: 24,\n                                text: text,\n                                fill: 'white'\n                                }\" />\n                            </v-layer>\n                        </v-stage>\n                    </v-card>\n                </v-col>\n                <v-col\n                    cols=\"12\"\n                    md=\"4\"\n                >\n                    <v-card\n                        class=\"pa-2\"\n                        height=\"450\"\n                    >\n                         <v-row class=\"mb-n8\" v-for=\"(item, index) in list\" :key=\"item.id\">\n                            <v-divider></v-divider>\n                            <v-col class=\"mb-n4\" cols=\"12\" >\n                            <span>{{ \"Line \" + doMath(index) }}</span>\n                            <v-divider></v-divider>\n                            </v-col>\n                            <v-col cols=\"12\" sm=\"3\">\n                            <v-text-field\n                                ref='line'\n                                :value=\"item.point[0] == null ? '0,0' : item.point[0] * 2 + ',' + item.point[1] * 2\"\n                                label=\"start (x,y)\"\n                                readonly\n                            ></v-text-field>\n                            </v-col>\n\n                            <v-col cols=\"12\" sm=\"3\">\n                            <v-text-field\n                                :value=\"item.point[2] == null ? '0,0' : item.point[2] * 2 + ',' + item.point[3] * 2\"\n                                label=\"end (x,y)\"\n                                readonly\n                            ></v-text-field>\n                            </v-col>\n\n                            <v-col cols=\"12\" sm=\"3\">\n                            <v-select\n                                v-model=\"item.path\"\n                                ref=\"path\"\n                                class=\"mt-4\"\n                                :items=\"items\"\n                                label=\"Line Status\"\n                                dense\n                            ></v-select>\n                            </v-col>\n\n                            <v-col cols=\"12\" sm=\"2\">\n                                <v-btn v-if=\"index != 0\" class=\"mt-4\" color=\"error\" @click=\"delLine(index)\" fab x-small dark>\n                                    <v-icon>mdi-close-circle</v-icon>\n                                </v-btn>\n                            </v-col>\n                        </v-row>\n                        <v-btn class=\"mt-4\" color=\"warning\" @click=\"reset\">reset</v-btn>\n                    </v-card>\n                </v-col>\n            </v-row>\n        </v-card>\n\n        <v-btn\n          color=\"primary\"\n          @click=\"save\"\n        >\n          Continue\n        </v-btn>\n\n        <v-btn text @click=\"e1 = 1\">Back</v-btn>\n      </v-stepper-content>\n\n      <v-stepper-content step=\"3\">\n        <v-card\n          class=\"mb-12\"\n          color=\"grey lighten-1\"\n        >\n        </v-card>\n\n        <v-btn\n          color=\"primary\"\n        >\n          Save\n        </v-btn>\n      </v-stepper-content>\n    </v-stepper-items>\n  </v-stepper>\n</template>\n\n<script>\nconst width = window.innerWidth;\nconst height = window.innerHeight;\n\n  export default {\n    data () {\n      return {\n        e1: 1,\n        camera_data : {\n            name: null,\n            location: null,\n            ip_stream: null,\n            ip_local: null,\n            longitude: null, \n            latitude: null,\n            port: null\n        },\n        stageSize: {\n            width: width,\n            height: height\n        },\n        list: [{\n            x: 0,\n            y: 0,\n            point: [],\n            closed: true,\n            stroke: '#00a1ff',\n            path: 'IN'\n        }],\n        text: '',\n        image: null,\n        scale: null,\n        color: ['#00a1ff', '#ff5757','#32B332', '#ffc60a'],\n        items: ['IN', 'OUT'],\n        };\n    },\n\n    created() {\n        \n    },\n\n    methods: {\n        testClick(evt){\n        const stage = evt.target.getStage();\n        const pos = stage.getPointerPosition();\n        const x = Math.round(pos.x);\n        const y = Math.round(pos.y);\n        const id = this.list.length - 1\n        if(this.list.length > 4){\n            alert(\"maksimum 4 line\")\n            this.$delete(this.list, 4)\n        }else{\n            if(this.list[id].point.length == 4){\n            let data = { x: 0, y: 0, point: [x,y], closed: true, stroke: this.color[id], path: 'IN'}\n            this.list.push(data)\n            }else{\n            this.list[id].point.push(x,y)\n            this.list[id].stroke = this.color[id]\n            }\n        }\n        // window.console.log(this.list[id])\n        this.text = \"x: \" + x * 2 + \" and \" + \"y: \" + y * 2\n        window.console.log(this.text)\n        },\n\n        reset(){\n            this.list = [{\n                x: 0,\n                y: 0,\n                point: [],\n                closed: true,\n                stroke: 'black',\n                path: 'IN'\n            }]\n        },\n\n        testText(){\n            window.console.log(this.list)\n        }, \n\n        delLine(index){\n            this.$delete(this.list, index)\n        },\n\n        save(){\n            const response = this.axios.post('http://localhost:8001/camera', { camera_data : this.camera_data, line_path : this.list })\n            window.console.log(response)\n        },\n\n        continue1(){\n            const response = this.axios.post('http://localhost:8001/generate', { url : this.camera_data.ip_stream, port : this.camera_data.port })\n            window.console.log(this.camera_data.ip_stream)\n            window.console.log(this.camera_data.port)\n            window.console.log(response)\n            setTimeout(() => {\n                this.e1 = 2\n                const image = new window.Image();\n                const today = new Date();\n                const time = today.getHours() + today.getMinutes() + today.getSeconds();\n                image.src = 'http://localhost:8001/storage/'+ this.camera_data.port +'.jpg?t=' + time;\n                image.onload = () => {\n                    this.image = image; \n                };\n            },10000);\n        },\n\n        doMath: function (index) {\n        return index+1\n        }\n    }\n  }\n</script>"],"sourceRoot":"src/pages"}]}