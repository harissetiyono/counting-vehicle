{"remainingRequest":"/Users/haris/Development/counting/client/node_modules/thread-loader/dist/cjs.js!/Users/haris/Development/counting/client/node_modules/babel-loader/lib/index.js!/Users/haris/Development/counting/client/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Users/haris/Development/counting/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/haris/Development/counting/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/haris/Development/counting/client/src/pages/AddCamera.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/haris/Development/counting/client/src/pages/AddCamera.vue","mtime":1579491741298},{"path":"/Users/haris/Development/counting/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/haris/Development/counting/client/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/haris/Development/counting/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/haris/Development/counting/client/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/haris/Development/counting/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/haris/Development/counting/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["AddCamera.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-stepper v-model=\"e1\">\n    <v-stepper-header>\n      <v-stepper-step :complete=\"e1 > 1\" step=\"1\">Camera Data</v-stepper-step>\n      <v-divider></v-divider>\n      <v-stepper-step :complete=\"e1 > 2\" step=\"2\">Counting Lines</v-stepper-step>\n    </v-stepper-header>\n\n    <v-stepper-items>\n      <v-stepper-content step=\"1\">\n        <div v-if=\"error_show\">\n            <v-alert dense type=\"error\" outlined v-if=\"$v.camera_data.$anyError\">\n                <div v-if=\"!$v.camera_data.name.required\">Camera name is required</div>\n                <div v-if=\"!$v.camera_data.name.minLength\">Camera name minumum 4 character</div>\n                <div v-if=\"!$v.camera_data.location.required\">Location is required</div>\n                <div v-if=\"!$v.camera_data.ip_stream.required\">Ip Stream is required</div>\n                <div v-if=\"!$v.camera_data.ip_local.required\">Ip Local is required</div>\n                <div v-if=\"!$v.camera_data.ip_local.url_or_ip\">Ip Local is invalid</div>\n                <div v-if=\"!$v.camera_data.longitude.decimal\">coordinate not longitude valid</div>\n                <div v-if=\"!$v.camera_data.latitude.decimal\">coordinate latitude not valid</div>\n                <div v-if=\"!$v.camera_data.port.required\">Port is required</div>\n                <div v-if=\"!$v.camera_data.port.between\">Port is not valid (min : 1025 and max: 65535)</div>\n            </v-alert>\n            <v-alert dense type=\"error\" outlined v-if=\"!statusConnection\">\n                Cannot connect stream server!\n            </v-alert>\n        </div>\n\n        <v-card>\n            <v-row class=\"pa-2 mt-n4 mb-n4\">\n                <v-col cols=\"6\">\n                    <p class=\"font-weight-regular mb-1\">Camera Name</p>\n                    <v-text-field v-model=\"camera_data.name\" solo label=\"Camera Name\"></v-text-field>\n                </v-col>\n                <v-col cols=\"6\">\n                    <p class=\"font-weight-regular mb-1\">IP Stream</p>\n                    <v-text-field v-model=\"camera_data.ip_stream\" solo label=\"IP Address\"></v-text-field>\n                </v-col>\n                <v-col class=\"mt-n10\" cols=\"6\">\n                    <p class=\"font-weight-regular mb-1\">Location</p>\n                    <v-textarea\n                    v-model=\"camera_data.location\"\n                    label=\"Location\"\n                    solo\n                    rows=\"1\"\n                    auto-grow\n                    ></v-textarea>\n                </v-col>\n                <v-col class=\"mt-n10\" cols=\"3\">\n                    <p class=\"font-weight-regular mb-1\">Longitude</p>\n                    <v-text-field v-model=\"camera_data.longitude\" solo label=\"Longitude\"></v-text-field>\n                </v-col>\n                <v-col class=\"mt-n10\" cols=\"3\">\n                    <p class=\"font-weight-regular mb-1\">Latitude</p>\n                    <v-text-field v-model=\"camera_data.latitude\" solo label=\"Latitude\"></v-text-field>\n                </v-col>\n                <v-col class=\"mt-n10\" cols=\"6\">\n                    <p class=\"font-weight-regular mb-1\">Port</p>\n                    <v-text-field v-model=\"camera_data.port\" solo label=\"ex: 9001\"></v-text-field>\n                </v-col>\n                <v-col class=\"mt-n10\" cols=\"6\">\n                    <p class=\"font-weight-regular mb-1\">Ip Server</p>\n                    <v-text-field v-model=\"camera_data.ip_local\" solo label=\"ex: htttp://127.0.0.1\"></v-text-field>\n                </v-col>\n            </v-row>\n            <v-btn\n                class=\"ma-2\"\n                color=\"primary\"\n                @click=\"continue1\"\n            >\n            Continue\n            </v-btn>\n            <v-btn\n                class=\"ma-2\"\n                to=\"/camera\"\n            >\n            Cancel\n            </v-btn>\n        </v-card>\n      </v-stepper-content>\n\n      <v-stepper-content step=\"2\">\n        <div v-if=\"error_show\">\n            <v-alert dense type=\"error\" outlined>\n                Please make line for counting vehicle!\n            </v-alert>\n        </div>\n        <v-card\n          class=\"pa-2 mb-4\"\n          color=\"grey lighten-1\"\n        >\n            <v-row\n                align=\"center\"\n                justify=\"center\"\n            >\n                <v-col\n                    cols=\"12\"\n                >\n                    <v-card\n                        class=\"pa-2\"\n                        max-height=\"580\"\n                    >\n                        <v-stage ref=\"stage\" :config=\"stageSize\">\n                            <v-layer ref=\"layer\">\n                                    <v-image ref=\"image\" @click=\"testClick\" :config=\"{\n                                        image: image,\n                                        scale: {\n                                            x: 0.5,\n                                            y: 0.5\n                                        }\n                                        }\"\n                                    />\n\n                                <v-line \n                                v-for=\"item in list\"\n                                :key=\"item.id\"\n                                :config=\"{\n                                    x: 0,\n                                    y: 0,\n                                    points: item.point,\n                                    closed: true,\n                                    stroke: item.stroke,\n                                }\"\n                                />\n                                <v-text ref=\"text\" :config=\"{\n                                x: 10,\n                                y: 10,\n                                fontFamily: 'Calibri',\n                                fontSize: 24,\n                                text: text,\n                                fill: 'white'\n                                }\" />\n                            </v-layer>\n                        </v-stage>\n                    </v-card>\n                </v-col>\n                <v-col\n                    cols=\"12\"\n                    md=\"6\"\n                >\n                    <v-card\n                        class=\"pa-2\"\n                    >\n                         <v-row class=\"mb-n8\" v-for=\"(item, index) in list\" :key=\"item.id\">\n                            <v-divider></v-divider>\n                            <v-col class=\"mb-n4\" cols=\"12\" >\n                            <span>{{ \"Line \" + doMath(index) }}</span>\n                            <v-divider></v-divider>\n                            </v-col>\n                            <v-col cols=\"12\" sm=\"3\">\n                            <v-text-field\n                                ref='line'\n                                :value=\"item.point[0] == null ? '0,0' : item.point[0] * 2 + ',' + item.point[1] * 2\"\n                                label=\"start (x,y)\"\n                                readonly\n                            ></v-text-field>\n                            </v-col>\n\n                            <v-col cols=\"12\" sm=\"3\">\n                            <v-text-field\n                                :value=\"item.point[2] == null ? '0,0' : item.point[2] * 2 + ',' + item.point[3] * 2\"\n                                label=\"end (x,y)\"\n                                readonly\n                            ></v-text-field>\n                            </v-col>\n\n                            <v-col cols=\"12\" sm=\"3\">\n                            <v-select\n                                v-model=\"item.path\"\n                                ref=\"path\"\n                                class=\"mt-4\"\n                                :items=\"items\"\n                                label=\"Line Status\"\n                                dense\n                            ></v-select>\n                            </v-col>\n\n                            <v-col cols=\"12\" sm=\"2\">\n                                <v-btn v-if=\"index != 0\" class=\"mt-4\" color=\"error\" @click=\"delLine(index)\" fab x-small dark>\n                                    <v-icon>mdi-close-circle</v-icon>\n                                </v-btn>\n                            </v-col>\n                        </v-row>\n                        <v-btn class=\"mt-4\" color=\"warning\" @click=\"reset\">reset</v-btn>\n                    </v-card>\n                </v-col>\n            </v-row>\n        </v-card>\n\n        <v-btn\n          color=\"primary\"\n          @click=\"saveConfirmation\"\n        >\n          Save\n        </v-btn>\n\n        <v-btn text @click=\"e1 = 1\">Back</v-btn>\n      </v-stepper-content>\n\n    </v-stepper-items>\n  </v-stepper>\n</template>\n\n<script>\nimport { required, minLength,ipAddress, url, or, numeric, between, decimal } from 'vuelidate/lib/validators'\nconst width = window.innerWidth;\nconst height = window.innerHeight;\n\n  export default {\n    data () {\n      return {\n        e1: 1,\n        error_show: false,\n        camera_data : {\n            name: null,\n            location: null,\n            ip_stream: null,\n            ip_local: null,\n            longitude: null, \n            latitude: null,\n            port: null\n        },\n        stageSize: {\n            width: width,\n            height: height\n        },\n        list: [{\n            x: 0,\n            y: 0,\n            point: [],\n            closed: true,\n            stroke: '#00a1ff',\n            path: 'IN'\n        }],\n        text: '',\n        image: null,\n        scale: null,\n        color: ['#00a1ff', '#ff5757','#32B332', '#ffc60a'],\n        items: ['IN', 'OUT'],\n        statusConnection: true,\n        };\n    },\n\n    validations: {\n        camera_data:{\n            name: {\n                required,\n                minLength: minLength(4)\n            },\n            location: {\n                required,\n            },\n            ip_stream:{\n                required\n            },\n            longitude:{\n                decimal\n            },\n            latitude:{\n                decimal\n            },\n            port:{\n                required,\n                numeric,\n                between: between(1025, 65535)\n            },\n            ip_local:{\n                required,\n                url_or_ip : or(ipAddress, url)\n            }\n        },        \n    },\n\n    created() {\n        this.$Progress.start()\n        if (this.$route.params.id) {\n            this.initialize(this.$route.params.id)\n        }\n        this.$Progress.finish()\n    },\n\n    methods: {\n        async initialize(id_camera){\n          try {\n              const respone_camera = await this.axios.get(process.env.VUE_APP_IP_SERVER + '/camera/' + id_camera)\n              this.camera_data = respone_camera.data\n              const respone_lines = await this.axios.get(process.env.VUE_APP_IP_SERVER + '/lines/' + id_camera)\n              this.list = respone_lines.data\n            } catch (error) {\n                window.console.log(Object.keys(error), error.message);\n            }\n        },\n\n        testClick(evt){\n            const stage = evt.target.getStage();\n            const pos = stage.getPointerPosition();\n            const x = Math.round(pos.x);\n            const y = Math.round(pos.y);\n            const id = this.list.length - 1\n            if(this.list.length > 4){\n                alert(\"maksimum 4 line\")\n                this.$delete(this.list, 4)\n            }else{\n                if(this.list[id].point.length == 4){\n                let data = { x: 0, y: 0, point: [x,y], closed: true, stroke: this.color[id], path: 'IN'}\n                this.list.push(data)\n                }else{\n                this.list[id].point.push(x,y)\n                this.list[id].stroke = this.color[id]\n                }\n            }\n            this.text = \"x: \" + x * 2 + \" and \" + \"y: \" + y * 2\n        },\n\n        reset(){\n            this.list = [{\n                x: 0,\n                y: 0,\n                point: [],\n                closed: true,\n                stroke: 'black',\n                path: 'IN'\n            }]\n        },\n\n        delLine(index){\n            this.$delete(this.list, index)\n        },\n\n        saveConfirmation(){\n            let self = this\n            if (this.list[0].point.length == 0 || this.list[0].point.length == 2) {\n                this.error_show = true\n            }else{\n                this.error_show = false\n                this.$swal.fire({\n                title: 'Are you sure?',\n                text: \"You won't be able to revert this!\",\n                icon: 'warning',\n                showCancelButton: true,\n                confirmButtonColor: '#3085d6',\n                cancelButtonColor: '#d33',\n                confirmButtonText: 'Yes, Save it!'\n                }).then((result) => {\n                if (result.value) {\n                    self.save(self.$route.params.id)\n                    this.$swal.fire(\n                        'Saved!',\n                        'Your Camera success save.',\n                        'success'\n                        )\n                    }\n                })\n            }\n        },\n\n        async save(id){\n            this.camera_data.system = 'counting'\n            try {\n                if (id) {\n                    await this.axios.put(process.env.VUE_APP_IP_SERVER + '/camera', { camera_data : this.camera_data, line_path : this.list })\n                }else{\n                    await this.axios.post(process.env.VUE_APP_IP_SERVER + '/camera', { camera_data : this.camera_data, line_path : this.list })\n                }\n                this.$router.push({ name: 'Camera' })\n            } catch (error) {\n                alert(error)\n            }\n        },\n\n        continue1(){\n            const self = this\n            this.$v.$touch()\n            this.$Progress.start()\n            this.axios.get(this.camera_data.ip_stream).then(function(){\n                if (self.$v.$invalid) {\n                    self.error_show = true\n                } else {\n                    self.error_show = false\n                    self.statusConnection = true\n                    self.axios.post(process.env.VUE_APP_IP_SERVER + '/generate', { url : self.camera_data.ip_stream, port : self.camera_data.port })\n                    setTimeout(() => {\n                        self.e1 = 2\n                        const image = new window.Image();\n                        const today = new Date();\n                        const time = today.getHours() + today.getMinutes() + today.getSeconds();\n                        image.src = process.env.VUE_APP_IP_SERVER + '/storage/'+ self.camera_data.port +'.jpg?t=' + time;\n                        image.onload = () => {\n                            self.image = image; \n                        };\n                        self.$Progress.finish()\n                    },5000);\n                }\n            }).catch(function(){\n                self.statusConnection = false\n                self.error_show = true\n                self.$Progress.finish()\n            })\n            \n        },\n\n        doMath: function (index) {\n            return index+1\n        },\n    }\n  }\n</script>"],"sourceRoot":"src/pages"}]}